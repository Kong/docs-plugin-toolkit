#!/usr/bin/env ruby
require 'thor'
require_relative 'lib/schema_downloader'
require_relative 'lib/example_validator'

class Plugins < Thor
  class_option :verbose, :type => :boolean

  def self.exit_on_failure?
    true
  end

  desc 'download_schemas', 'Downloads the plugins schemas in json format'
  option :version,     aliases: '-v',    type: :string,  required: true,                        desc: 'Kong Version'
  option :plugins,     aliases: '-p',    type: :array,   required: true,                        desc: 'List containing the name of the plugins'
  option :host,        aliases: '-d',    type: :string,                   default: 'localhost', desc: 'Hostname of the server running the API.'
  option :port,        aliases: '-h',    type: :numeric,                  default: 8001,        desc: 'Port number'
  option :destination, aliases: '-dest', type: :string,                   default: './schemas', desc: 'Destination folder where the schemas will be written'
  def download_schemas
    puts 'Downloading schemas...'

    options[:plugins].each do |plugin|
      SchemaDownloader.run!(plugin:, options:)
    end

    puts 'Done!'
  end

  desc 'validate_examples', 'Validates an example against the schema'
  option :version, aliases: '-v', type: :string, required: true,  default: '_index',     desc: 'Kong Version'
  option :plugins, aliases: '-p', type: :array,  required: true,                         desc: 'List containing the name of the plugins'
  option :host,    aliases: '-d', type: :string,                  default: 'localhost',  desc: 'Hostname of the server running the API.'
  option :port,    aliases: '-h', type: :numeric,                 default: 8001,         desc: 'Port number'
  option :source,  aliases: '-s', type: :string,                  default: './examples', desc: 'Source folder containing the examples'
  def validate_examples
    puts 'Validating examples...'

    options[:plugins].each do |plugin|
      ExampleValidator.run!(plugin:, options:)
    end

    puts 'Done!'
  end
end

Plugins.start(ARGV)
