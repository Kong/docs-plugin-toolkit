{
  "entity_checks": [],
  "fields": [
    {
      "consumer": {
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "type": "foreign",
        "reference": "consumers"
      }
    },
    {
      "protocols": {
        "required": true,
        "type": "set",
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "ws",
            "wss"
          ]
        },
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "ws",
          "wss"
        ]
      }
    },
    {
      "consumer_group": {
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "type": "foreign",
        "reference": "consumer_groups"
      }
    },
    {
      "config": {
        "required": true,
        "fields": [
          {
            "scopes": {
              "elements": {
                "type": "string"
              },
              "description": "Describes an array of scope names that will be available to the end user. If `mandatory_scope` is set to `true`, then `scopes` are required.",
              "type": "array"
            }
          },
          {
            "mandatory_scope": {
              "required": true,
              "description": "An optional boolean value telling the plugin to require at least one `scope` to be authorized by the end user.",
              "type": "boolean",
              "default": false
            }
          },
          {
            "provision_key": {
              "required": true,
              "description": "The unique key the plugin has generated when it has been added to the Service.",
              "type": "string",
              "encrypted": true,
              "unique": true,
              "auto": true
            }
          },
          {
            "token_expiration": {
              "required": true,
              "description": "An optional integer value telling the plugin how many seconds a token should last, after which the client will need to refresh the token. Set to `0` to disable the expiration.",
              "type": "number",
              "default": 7200
            }
          },
          {
            "enable_authorization_code": {
              "required": true,
              "description": "An optional boolean value to enable the three-legged Authorization Code flow (RFC 6742 Section 4.1).",
              "type": "boolean",
              "default": false
            }
          },
          {
            "enable_implicit_grant": {
              "required": true,
              "description": "An optional boolean value to enable the Implicit Grant flow which allows to provision a token as a result of the authorization process (RFC 6742 Section 4.2).",
              "type": "boolean",
              "default": false
            }
          },
          {
            "enable_client_credentials": {
              "required": true,
              "description": "An optional boolean value to enable the Client Credentials Grant flow (RFC 6742 Section 4.4).",
              "type": "boolean",
              "default": false
            }
          },
          {
            "enable_password_grant": {
              "required": true,
              "description": "An optional boolean value to enable the Resource Owner Password Credentials Grant flow (RFC 6742 Section 4.3).",
              "type": "boolean",
              "default": false
            }
          },
          {
            "hide_credentials": {
              "required": true,
              "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service.",
              "type": "boolean",
              "default": false
            }
          },
          {
            "accept_http_if_already_terminated": {
              "required": true,
              "description": "Accepts HTTPs requests that have already been terminated by a proxy or load balancer.",
              "type": "boolean",
              "default": false
            }
          },
          {
            "anonymous": {
              "type": "string",
              "description": "An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails."
            }
          },
          {
            "global_credentials": {
              "required": true,
              "description": "An optional boolean value that allows using the same OAuth credentials generated by the plugin with any other service whose OAuth 2.0 plugin configuration also has `config.global_credentials=true`.",
              "type": "boolean",
              "default": false
            }
          },
          {
            "auth_header_name": {
              "description": "The name of the header that is supposed to carry the access token.",
              "default": "authorization",
              "type": "string"
            }
          },
          {
            "refresh_token_ttl": {
              "required": true,
              "description": "Time-to-live value for data",
              "type": "number",
              "between": [
                0,
                100000000
              ],
              "default": 1209600
            }
          },
          {
            "reuse_refresh_token": {
              "required": true,
              "description": "An optional boolean value that indicates whether an OAuth refresh token is reused when refreshing an access token.",
              "type": "boolean",
              "default": false
            }
          },
          {
            "persistent_refresh_token": {
              "required": true,
              "type": "boolean",
              "default": false
            }
          },
          {
            "pkce": {
              "required": false,
              "description": "Specifies a mode of how the Proof Key for Code Exchange (PKCE) should be handled by the plugin.",
              "one_of": [
                "none",
                "lax",
                "strict"
              ],
              "type": "string",
              "default": "lax"
            }
          },
          {
            "realm": {
              "required": false,
              "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
              "type": "string"
            }
          }
        ],
        "entity_checks": [
          {
            "conditional": {
              "then_match": {
                "required": true
              },
              "if_match": {
                "eq": true
              },
              "then_field": "scopes",
              "if_field": "mandatory_scope"
            }
          }
        ],
        "type": "record"
      }
    }
  ]
}