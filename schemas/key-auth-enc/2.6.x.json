{
  "fields": [
    {
      "consumer": {
        "type": "foreign",
        "eq": null,
        "reference": "consumers"
      }
    },
    {
      "protocols": {
        "elements": {
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ],
          "type": "string"
        },
        "required": true,
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "type": "set"
      }
    },
    {
      "config": {
        "fields": [
          {
            "key_names": {
              "default": [
                "apikey"
              ],
              "required": true,
              "elements": {
                "type": "string"
              },
              "type": "array",
              "examples": [
                [
                  "apikey"
                ]
              ],
              "description": "Describes an array of parameter names where the plugin will look for a key. The client must send the\nauthentication key in one of those key names, and the plugin will try to read the credential from a\nheader, request body, or query string parameter with the same name.\n\nKey names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen."
            }
          },
          {
            "hide_credentials": {
              "default": false,
              "type": "boolean",
              "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`,\nthe plugin strips the credential from the request (i.e., the header, query string, or request body containing the key) before proxying it."
            }
          },
          {
            "anonymous": {
              "uuid": true,
              "legacy": true,
              "type": "string",
              "description": "An optional string (consumer UUID) value to use as an anonymous consumer if authentication fails.\nIf empty (default), the request will fail with an authentication failure `4xx`. Note that this value\nmust refer to the consumer `id` attribute that is internal to Kong Gateway, and **not** its `custom_id`."
            }
          },
          {
            "key_in_header": {
              "default": true,
              "type": "boolean",
              "description": "If enabled (default), the plugin reads the request header and tries to find the key in it."
            }
          },
          {
            "key_in_query": {
              "default": true,
              "type": "boolean",
              "description": "If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it."
            }
          },
          {
            "key_in_body": {
              "default": false,
              "type": "boolean",
              "description": "If enabled, the plugin reads the request body (if said request has one and its MIME type is supported) and tries to find the key in it. Supported MIME types: `application/www-form-urlencoded`, `application/json`, and `multipart/form-data`."
            }
          },
          {
            "run_on_preflight": {
              "default": true,
              "type": "boolean",
              "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests.\nIf set to `false`, then `OPTIONS` requests are always allowed."
            }
          }
        ],
        "required": true,
        "type": "record"
      }
    }
  ]
}