{
  "entity_checks": [

  ],
  "fields": [
    {
      "protocols": {
        "required": true,
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        },
        "type": "set",
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "description": "A set of strings representing HTTP protocols."
      }
    },
    {
      "consumer_group": {
        "type": "foreign",
        "reference": "consumer_groups",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "config": {
        "required": true,
        "entity_checks": [
          {
            "at_least_one_of": [
              "http_proxy_host",
              "https_proxy_host"
            ]
          },
          {
            "at_least_one_of": [
              "http_proxy_port",
              "https_proxy_port"
            ]
          },
          {
            "mutually_required": [
              "http_proxy_host",
              "http_proxy_port"
            ]
          },
          {
            "mutually_required": [
              "https_proxy_host",
              "https_proxy_port"
            ]
          }
        ],
        "type": "record",
        "fields": [
          {
            "x_headers": {
              "required": true,
              "type": "string",
              "default": "append",
              "one_of": [
                "append",
                "transparent",
                "delete"
              ],
              "description": "Determines how to handle headers when forwarding the request."
            }
          },
          {
            "http_proxy_host": {
              "type": "string",
              "description": "A string representing a host name, such as example.com."
            }
          },
          {
            "http_proxy_port": {
              "between": [
                0,
                65535
              ],
              "type": "integer",
              "description": "An integer representing a port number between 0 and 65535, inclusive."
            }
          },
          {
            "https_proxy_host": {
              "type": "string",
              "description": "A string representing a host name, such as example.com."
            }
          },
          {
            "https_proxy_port": {
              "between": [
                0,
                65535
              ],
              "type": "integer",
              "description": "An integer representing a port number between 0 and 65535, inclusive."
            }
          },
          {
            "proxy_scheme": {
              "required": true,
              "type": "string",
              "default": "http",
              "one_of": [
                "http"
              ],
              "description": "The proxy scheme to use when connecting. Only `http` is supported."
            }
          },
          {
            "auth_username": {
              "required": false,
              "referenceable": true,
              "description": "The username to authenticate with, if the forward proxy is protected\nby basic authentication.",
              "type": "string"
            }
          },
          {
            "auth_password": {
              "required": false,
              "referenceable": true,
              "description": "The password to authenticate with, if the forward proxy is protected\nby basic authentication.",
              "type": "string"
            }
          },
          {
            "https_verify": {
              "required": true,
              "default": false,
              "description": "Whether the server certificate will be verified according to the CA certificates specified in lua_ssl_trusted_certificate.",
              "type": "boolean"
            }
          }
        ],
        "shorthand_fields": [
          {
            "proxy_host": {
              "deprecation": {
                "message": "forward-proxy: config.proxy_host is deprecated, please use config.http_proxy_host instead",
                "removal_in_version": "4.0"
              },
              "type": "string"
            }
          },
          {
            "proxy_port": {
              "deprecation": {
                "message": "forward-proxy: config.proxy_port is deprecated, please use config.http_proxy_port instead",
                "removal_in_version": "4.0"
              },
              "type": "integer"
            }
          }
        ]
      }
    }
  ]
}