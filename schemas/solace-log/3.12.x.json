{
  "entity_checks": [],
  "fields": [
    {
      "consumer": {
        "type": "foreign",
        "reference": "consumers",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "eq": null
      }
    },
    {
      "consumer_group": {
        "type": "foreign",
        "reference": "consumer_groups",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "eq": null
      }
    },
    {
      "protocols": {
        "type": "set",
        "required": true,
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "ws",
          "wss"
        ],
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "ws",
            "wss"
          ]
        }
      }
    },
    {
      "config": {
        "required": true,
        "type": "record",
        "fields": [
          {
            "session": {
              "type": "record",
              "required": true,
              "fields": [
                {
                  "host": {
                    "description": "The IPv4 or IPv6 address or host name to connect to (see: https://docs.solace.com/API-Developer-Online-Ref-Documentation/c/index.html#host-entry).",
                    "required": true,
                    "type": "string",
                    "referenceable": true
                  }
                },
                {
                  "vpn_name": {
                    "type": "string",
                    "len_max": 32,
                    "description": "The name of the Message VPN to attempt to join when connecting to an event broker.",
                    "required": false
                  }
                },
                {
                  "authentication": {
                    "required": true,
                    "fields": [
                      {
                        "scheme": {
                          "required": true,
                          "description": "The client authentication scheme used when connection to an event broker.",
                          "one_of": [
                            "NONE",
                            "BASIC",
                            "OAUTH2"
                          ],
                          "default": "BASIC",
                          "type": "string"
                        }
                      },
                      {
                        "username": {
                          "required": false,
                          "description": "The username used with `BASIC` authentication scheme when connecting to an event broker.",
                          "encrypted": true,
                          "len_max": 189,
                          "type": "string",
                          "referenceable": true
                        }
                      },
                      {
                        "password": {
                          "required": false,
                          "description": "The password used with `BASIC` authentication scheme when connecting to an event broker.",
                          "encrypted": true,
                          "len_max": 128,
                          "type": "string",
                          "referenceable": true
                        }
                      },
                      {
                        "access_token": {
                          "required": false,
                          "description": "The OAuth2 access token used with `OAUTH2` authentication scheme when connecting to an event broker.",
                          "encrypted": true,
                          "type": "string",
                          "referenceable": true
                        }
                      },
                      {
                        "access_token_header": {
                          "type": "string",
                          "required": false
                        }
                      },
                      {
                        "id_token": {
                          "required": false,
                          "description": "The OpenID Connect ID token used with `OAUTH2` authentication scheme when connecting to an event broker.",
                          "encrypted": true,
                          "type": "string",
                          "referenceable": true
                        }
                      },
                      {
                        "id_token_header": {
                          "type": "string",
                          "required": false
                        }
                      }
                    ],
                    "description": "Session authentication related configuration.",
                    "entity_checks": [
                      {
                        "conditional": {
                          "if_match": {
                            "eq": "BASIC"
                          },
                          "then_field": "username",
                          "if_field": "scheme",
                          "then_match": {
                            "required": true
                          }
                        }
                      },
                      {
                        "conditional": {
                          "if_match": {
                            "eq": "BASIC"
                          },
                          "then_field": "password",
                          "if_field": "scheme",
                          "then_match": {
                            "required": true
                          }
                        }
                      },
                      {
                        "conditional_at_least_one_of": {
                          "if_match": {
                            "eq": "OAUTH2"
                          },
                          "then_err": "must set one of %s when 'scheme' is 'OAUTH2'",
                          "if_field": "scheme",
                          "then_at_least_one_of": [
                            "access_token",
                            "access_token_header",
                            "id_token",
                            "id_token_header"
                          ]
                        }
                      }
                    ],
                    "type": "record"
                  }
                },
                {
                  "connect_timeout": {
                    "required": true,
                    "description": "The timeout period (in milliseconds) for a connect operation to a given host (per host).",
                    "between": [
                      100,
                      100000
                    ],
                    "default": 3000,
                    "type": "integer"
                  }
                },
                {
                  "ssl_validate_certificate": {
                    "type": "boolean",
                    "required": true,
                    "default": false,
                    "description": "Indicates whether the API should validate server certificates with the trusted certificates."
                  }
                },
                {
                  "calculate_message_expiry": {
                    "type": "boolean",
                    "required": true,
                    "default": true,
                    "description": "If this property is true and time-to-live has a positive value in a message, the expiration time is calculated when the message is sent or received"
                  }
                },
                {
                  "generate_rcv_timestamps": {
                    "type": "boolean",
                    "required": true,
                    "default": true,
                    "description": "When enabled, a receive timestamp is recorded for each message."
                  }
                },
                {
                  "generate_send_timestamps": {
                    "type": "boolean",
                    "required": true,
                    "default": true,
                    "description": "When enabled, a send timestamp is automatically included (if not already present) in the Solace-defined fields for each message sent."
                  }
                },
                {
                  "generate_sender_id": {
                    "type": "boolean",
                    "required": true,
                    "default": true,
                    "description": "When enabled, a sender id is automatically included (if not already present) in the Solace-defined fields for each message sent."
                  }
                },
                {
                  "generate_sequence_number": {
                    "type": "boolean",
                    "required": true,
                    "default": true,
                    "description": "When enabled, a sequence number is automatically included (if not already present) in the Solace-defined fields for each message sent."
                  }
                },
                {
                  "properties": {
                    "required": false,
                    "description": "Additional Solace session properties (each setting needs to have `SESSION_` prefix).",
                    "values": {
                      "required": true,
                      "type": "string",
                      "referenceable": true
                    },
                    "keys": {
                      "type": "string",
                      "required": true,
                      "not_one_of": [
                        "SESSION_HOST",
                        "SESSION_CONNECT_BLOCKING",
                        "SESSION_CONNECT_TIMEOUT_MS",
                        "SESSION_SEND_BLOCKING",
                        "SESSION_SUBSCRIBE_BLOCKING",
                        "SESSION_BLOCK_WHILE_CONNECTING",
                        "SESSION_SSL_VALIDATE_CERTIFICATE",
                        "SESSION_SEND_TIMESTAMP",
                        "SESSION_ASYNC_DNS",
                        "SESSION_CALCULATE_MESSAGE_EXPIRATION",
                        "SESSION_RCV_TIMESTAMP",
                        "SESSION_SEND_TIMESTAMP",
                        "SESSION_SEND_SENDER_ID",
                        "SESSION_SEND_SEQUENCE_NUMBER",
                        "SESSION_GUARANTEED_WITH_WEB_TRANSPORT",
                        "SESSION_VPN_NAME",
                        "SESSION_ACK_EVENT_MODE",
                        "SESSION_AUTHENTICATION_SCHEME",
                        "SESSION_USERNAME",
                        "SESSION_PASSWORD",
                        "SESSION_OAUTH2_ACCESS_TOKEN",
                        "SESSION_OIDC_ID_TOKEN"
                      ],
                      "match": "^SESSION_"
                    },
                    "type": "map"
                  }
                }
              ],
              "description": "Session related configuration."
            }
          },
          {
            "message": {
              "description": "The log message related configuration.",
              "required": true,
              "fields": [
                {
                  "destinations": {
                    "required": true,
                    "description": "The log message destinations.",
                    "elements": {
                      "type": "record",
                      "fields": [
                        {
                          "name": {
                            "required": true,
                            "description": "The name of the destination. You can use `$(uri_captures['<capture-identifier>'])` in this field to capture the name from a regex request URI (replace `<capture-identifier>` with a real value; for example `$(uri_captures['queue'])` when the matched route has a path `~/(?<queue>[a-z]+)`).",
                            "type": "string"
                          }
                        },
                        {
                          "type": {
                            "required": true,
                            "description": "The type of the destination.",
                            "one_of": [
                              "QUEUE",
                              "TOPIC"
                            ],
                            "default": "QUEUE",
                            "type": "string"
                          }
                        }
                      ]
                    },
                    "len_min": 1,
                    "type": "array"
                  }
                },
                {
                  "delivery_mode": {
                    "required": true,
                    "description": "Sets the log message delivery mode.",
                    "one_of": [
                      "DIRECT",
                      "PERSISTENT"
                    ],
                    "default": "DIRECT",
                    "type": "string"
                  }
                },
                {
                  "sender_id": {
                    "required": false,
                    "description": "Allows the application to set the sender identifier.",
                    "type": "string"
                  }
                },
                {
                  "priority": {
                    "required": true,
                    "description": "Sets the log message priority.",
                    "between": [
                      0,
                      255
                    ],
                    "default": 4,
                    "type": "integer"
                  }
                },
                {
                  "dmq_eligible": {
                    "type": "boolean",
                    "required": true,
                    "default": false,
                    "description": "Sets the dead message queue (DMQ) eligible property on the log message."
                  }
                },
                {
                  "ttl": {
                    "required": true,
                    "description": "Sets the time to live (TTL) in milliseconds for the log message. Setting the time to live to zero disables the TTL for the log message.",
                    "type": "integer",
                    "default": 0,
                    "gt": -1
                  }
                },
                {
                  "ack_timeout": {
                    "required": true,
                    "description": "When using a non-DIRECT guaranteed delivery mode, this property sets the log message acknowledgement timeout (waiting time).",
                    "between": [
                      1,
                      100000
                    ],
                    "default": 2000,
                    "type": "integer"
                  }
                },
                {
                  "custom_fields_by_lua": {
                    "required": false,
                    "type": "map",
                    "values": {
                      "len_min": 1,
                      "type": "string"
                    },
                    "keys": {
                      "len_min": 1,
                      "type": "string"
                    },
                    "description": "A key-value map that dynamically modifies log fields using Lua code."
                  }
                },
                {
                  "tracing": {
                    "type": "boolean",
                    "required": true,
                    "default": false,
                    "description": "Enable or disable the tracing. This is primarily used for distributed tracing and log message correlation, especially in debugging or tracking log message flows across multiple systems."
                  }
                },
                {
                  "tracing_sampled": {
                    "type": "boolean",
                    "required": true,
                    "default": false,
                    "description": "Indicates whether the log message should be included in distributed tracing (i.e., if it should be \"sampled\" for the tracing)."
                  }
                }
              ],
              "type": "record"
            }
          }
        ]
      }
    }
  ]
}