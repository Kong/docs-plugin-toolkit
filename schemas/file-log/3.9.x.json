{
  "entity_checks": [

  ],
  "fields": [
    {
      "protocols": {
        "required": true,
        "type": "set",
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "description": "A set of strings representing protocols.",
        "elements": {
          "description": "A string representing a protocol, such as HTTP or HTTPS.",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "tcp",
            "tls",
            "tls_passthrough",
            "udp",
            "ws",
            "wss"
          ],
          "type": "string"
        }
      }
    },
    {
      "consumer_group": {
        "reference": "consumer_groups",
        "eq": null,
        "type": "foreign",
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "config": {
        "fields": [
          {
            "path": {
              "match": "^[^*&%%\\`]+$",
              "required": true,
              "type": "string",
              "err": "not a valid filename",
              "description": "The file path of the output log file. The plugin creates the log file if it doesn't exist yet."
            }
          },
          {
            "reopen": {
              "default": false,
              "description": "Determines whether the log file is closed and reopened on every request.",
              "required": true,
              "type": "boolean"
            }
          },
          {
            "custom_fields_by_lua": {
              "description": "Lua code as a key-value map",
              "values": {
                "len_min": 1,
                "type": "string"
              },
              "keys": {
                "type": "string",
                "len_min": 1
              },
              "type": "map"
            }
          }
        ],
        "required": true,
        "type": "record"
      }
    }
  ]
}