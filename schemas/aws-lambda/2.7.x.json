{
  "fields": [
    {
      "protocols": {
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        },
        "required": true,
        "type": "set"
      }
    },
    {
      "config": {
        "fields": [
          {
            "timeout": {
              "type": "number",
              "required": true,
              "default": 60000
            }
          },
          {
            "keepalive": {
              "type": "number",
              "required": true,
              "default": 60000
            }
          },
          {
            "aws_key": {
              "type": "string",
              "encrypted": true,
              "examples": [
                "<AWS_KEY>"
              ]
            }
          },
          {
            "aws_secret": {
              "type": "string",
              "encrypted": true,
              "examples": [
                "<AWS_SECRET>"
              ]
            }
          },
          {
            "aws_region": {
              "type": "string",
              "examples": [
                "<AWS_REGION>"
              ],
              "description": "The AWS region where the Lambda function is located. The plugin does not\nattempt to validate the supplied region name. If an invalid region name\nis provided, the plugin responds with an HTTP `500 Internal Server Error`\nat runtime and logs a DNS resolution failure.\n\nThe plugin will automatically\ndetect the AWS region on runtime via `AWS_REGION` or `AWS_DEFAULT_REGION` environment\nvariables when neither `aws_region` nor `host` is specified in plugin configuration.\nUsing environment variables enables regionally distributed Kong cluster nodes\nto connect to the closest AWS region. If `aws_region`, `host` and environment\nvariables have not been specified, the plugin responds with an HTTP\n`500 Internal Server Error` at run-time."
            }
          },
          {
            "function_name": {
              "type": "string",
              "required": false,
              "examples": [
                "<LAMBDA_FUNCTION_NAME>"
              ]
            }
          },
          {
            "qualifier": {
              "type": "string"
            }
          },
          {
            "invocation_type": {
              "type": "string",
              "one_of": [
                "RequestResponse",
                "Event",
                "DryRun"
              ],
              "required": true,
              "default": "RequestResponse"
            }
          },
          {
            "log_type": {
              "type": "string",
              "one_of": [
                "Tail",
                "None"
              ],
              "required": true,
              "default": "Tail"
            }
          },
          {
            "host": {
              "type": "string",
              "description": "The host where the Lambda function is located. This value can point to a\nlocal Lambda server, allowing for easier debugging.\n\nEither `aws_region` or `host` must be provided."
            }
          },
          {
            "port": {
              "type": "integer",
              "default": 443,
              "between": [
                0,
                65535
              ]
            }
          },
          {
            "unhandled_status": {
              "type": "integer",
              "between": [
                100,
                999
              ]
            }
          },
          {
            "forward_request_method": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "forward_request_uri": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "forward_request_headers": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "forward_request_body": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "is_proxy_integration": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "awsgateway_compatible": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "proxy_scheme": {
              "type": "string",
              "one_of": [
                "http",
                "https"
              ]
            }
          },
          {
            "proxy_url": {
              "type": "string",
              "examples": [
                "http://my-proxy-server:3128"
              ]
            }
          },
          {
            "skip_large_bodies": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "base64_encode_body": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "type": "record",
        "required": true
      }
    }
  ]
}
