{
  "fields": [
    {
      "protocols": {
        "elements": {
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "tcp",
            "tls",
            "udp"
          ],
          "type": "string"
        },
        "required": true,
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "type": "set"
      }
    },
    {
      "config": {
        "fields": [
          {
            "http_endpoint": {
              "type": "string",
              "required": true,
              "examples": [
                "http://mockbin.org/bin/:id"
              ],
              "description": "The HTTP URL endpoint (including the protocol to use) to which the data is sent.\n\nIf the `http_endpoint` contains a username and password (for example,\n`http://bob:password@example.com/logs`), then Kong Gateway automatically includes\na basic-auth `Authorization` header in the log requests."
            }
          },
          {
            "method": {
              "one_of": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "default": "POST",
              "type": "string",
              "examples": [
                "POST"
              ],
              "description": "An optional method used to send data to the HTTP server. Supported values are\n`POST` (default), `PUT`, and `PATCH`."
            }
          },
          {
            "content_type": {
              "one_of": [
                "application/json"
              ],
              "default": "application/json",
              "type": "string",
              "description": "Indicates the type of data sent. The only available option is `application/json`."
            }
          },
          {
            "timeout": {
              "default": 10000,
              "type": "number",
              "examples": [
                1000
              ],
              "description": "An optional timeout in milliseconds when sending data to the upstream server."
            }
          },
          {
            "keepalive": {
              "default": 60000,
              "type": "number",
              "examples": [
                1000
              ],
              "description": "An optional value in milliseconds that defines how long an idle connection will live before being closed."
            }
          },
          {
            "retry_count": {
              "default": 10,
              "type": "integer",
              "examples": [
                15
              ],
              "description": "Number of times to retry when sending data to the upstream server."
            }
          },
          {
            "queue_size": {
              "default": 1,
              "type": "integer",
              "description": "Maximum number of log entries to be sent on each message to the upstream server."
            }
          },
          {
            "flush_timeout": {
              "default": 2,
              "type": "number",
              "examples": [
                2
              ],
              "description": "Optional time in seconds. If `queue_size` > 1, this is the max idle time before sending a log with less than `queue_size` records."
            }
          },
          {
            "headers": {
              "values": {
                "elements": {
                  "type": "string"
                },
                "type": "array"
              },
              "keys": {
                "type": "string",
                "match_none": [
                  {
                    "err": "cannot contain 'Host' header",
                    "pattern": "^[Hh][Oo][Ss][Tt]$"
                  },
                  {
                    "err": "cannot contain 'Content-Length' header",
                    "pattern": "^[Cc][Oo][Nn][Tt][Ee][Nn][Tt]%-[Ll][Ee][nn][Gg][Tt][Hh]$"
                  },
                  {
                    "err": "cannot contain 'Content-Type' header",
                    "pattern": "^[Cc][Oo][Nn][Tt][Ee][Nn][Tt]%-[Tt][Yy][Pp][Ee]$"
                  }
                ]
              },
              "type": "map",
              "description": "\nAn optional table of headers added to the HTTP message to the upstream server.\nThe table contains arrays of values, indexed by the header name (multiple values per header).\n\nThe following headers are not allowed: `Host`, `Content-Length`, `Content-Type`."
            }
          },
          {
            "custom_fields_by_lua": {
              "keys": {
                "len_min": 1,
                "type": "string"
              },
              "values": {
                "type": "string",
                "len_min": 1
              },
              "type": "map",
              "description": "A list of key-value pairs, where the key is the name of a log field and\nthe value is a chunk of Lua code, whose return value sets or replaces\nthe log field value."
            }
          }
        ],
        "required": true,
        "type": "record"
      }
    }
  ]
}