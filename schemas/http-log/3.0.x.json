{
  "fields": [
    {
      "protocols": {
        "type": "set",
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "tcp",
            "tls",
            "tls_passthrough",
            "udp",
            "ws",
            "wss"
          ]
        },
        "required": true,
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ]
      }
    },
    {
      "config": {
        "required": true,
        "fields": [
          {
            "http_endpoint": {
              "encrypted": true,
              "type": "string",
              "required": true,
              "examples": [
                "http://mockbin.org/bin/:id"
              ],
              "description": "The HTTP URL endpoint (including the protocol to use) to which the data is sent.\n\nIf the `http_endpoint` contains a username and password (for example,\n`http://bob:password@example.com/logs`), then Kong Gateway automatically includes\na basic-auth `Authorization` header in the log requests."
            }
          },
          {
            "method": {
              "one_of": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "type": "string",
              "default": "POST",
              "examples": [
                "POST"
              ],
              "description": "An optional method used to send data to the HTTP server. Supported values are\n`POST` (default), `PUT`, and `PATCH`."
            }
          },
          {
            "content_type": {
              "one_of": [
                "application/json"
              ],
              "type": "string",
              "default": "application/json",
              "description": "Indicates the type of data sent. The only available option is `application/json`."
            }
          },
          {
            "timeout": {
              "type": "number",
              "default": 10000,
              "examples": [
                1000
              ],
              "description": "An optional timeout in milliseconds when sending data to the upstream server."
            }
          },
          {
            "keepalive": {
              "type": "number",
              "default": 60000,
              "examples": [
                1000
              ],
              "description": "An optional value in milliseconds that defines how long an idle connection will live before being closed."
            }
          },
          {
            "retry_count": {
              "type": "integer",
              "default": 10,
              "examples": [
                15
              ],
              "description": "Number of times to retry when sending data to the upstream server."
            }
          },
          {
            "queue_size": {
              "type": "integer",
              "default": 1,
              "description": "Maximum number of log entries to be sent on each message to the upstream server."
            }
          },
          {
            "flush_timeout": {
              "type": "number",
              "default": 2,
              "examples": [
                2
              ],
              "description": "Optional time in seconds. If `queue_size` > 1, this is the max idle time before sending a log with less than `queue_size` records."
            }
          },
          {
            "headers": {
              "keys": {
                "type": "string",
                "match_none": [
                  {
                    "pattern": "^[Hh][Oo][Ss][Tt]$",
                    "err": "cannot contain 'Host' header"
                  },
                  {
                    "pattern": "^[Cc][Oo][Nn][Tt][Ee][Nn][Tt]%-[Ll][Ee][nn][Gg][Tt][Hh]$",
                    "err": "cannot contain 'Content-Length' header"
                  },
                  {
                    "pattern": "^[Cc][Oo][Nn][Tt][Ee][Nn][Tt]%-[Tt][Yy][Pp][Ee]$",
                    "err": "cannot contain 'Content-Type' header"
                  }
                ]
              },
              "type": "map",
              "values": {
                "type": "string"
              },
              "description": "An optional table of headers included in the HTTP message to the\nupstream server. Values are indexed by header name, and each header name\naccepts a single string.\n\nThe following headers are not allowed: `Host`, `Content-Length`, `Content-Type`.\n\n> **Note:** Before version 3.0.0, the values were arrays of strings (multiple values per header name)."
            }
          },
          {
            "custom_fields_by_lua": {
              "keys": {
                "type": "string",
                "len_min": 1
              },
              "type": "map",
              "values": {
                "len_min": 1,
                "type": "string"
              },
              "description": "A list of key-value pairs, where the key is the name of a log field and\nthe value is a chunk of Lua code, whose return value sets or replaces\nthe log field value."
            }
          }
        ],
        "type": "record"
      }
    }
  ]
}