{
  "fields": [
    {
      "protocols": {
        "required": true,
        "elements": {
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ],
          "type": "string"
        },
        "type": "set",
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "description": "A set of strings representing HTTP protocols."
      }
    },
    {
      "consumer_group": {
        "reference": "consumer_groups",
        "type": "foreign",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "config": {
        "type": "record",
        "fields": [
          {
            "message_countback": {
              "between": [
                1,
                10
              ],
              "type": "number",
              "default": 1,
              "description": "Number of messages in the chat history to Vectorize/Cache"
            }
          },
          {
            "ignore_system_prompts": {
              "type": "boolean",
              "default": false,
              "description": "Ignore and discard any system prompts when Vectorizing the request"
            }
          },
          {
            "ignore_assistant_prompts": {
              "type": "boolean",
              "default": false,
              "description": "Ignore and discard any assistant prompts when Vectorizing the request"
            }
          },
          {
            "stop_on_failure": {
              "required": true,
              "type": "boolean",
              "default": false,
              "description": "Halt the LLM request process in case of a caching system failure"
            }
          },
          {
            "storage_ttl": {
              "gt": 0,
              "type": "integer",
              "default": 300,
              "description": "Number of seconds to keep resources in the storage backend. This value is independent of `cache_ttl` or resource TTLs defined by Cache-Control behaviors."
            }
          },
          {
            "cache_ttl": {
              "gt": 0,
              "type": "integer",
              "default": 300,
              "description": "TTL in seconds of cache entities. Must be a value greater than 0."
            }
          },
          {
            "cache_control": {
              "required": true,
              "type": "boolean",
              "default": false,
              "description": "When enabled, respect the Cache-Control behaviors defined in RFC7234."
            }
          },
          {
            "exact_caching": {
              "required": true,
              "type": "boolean",
              "default": false,
              "description": "When enabled, a first check for exact query will be done. It will impact DB size"
            }
          },
          {
            "embeddings": {
              "required": true,
              "fields": [
                {
                  "auth": {
                    "required": false,
                    "fields": [
                      {
                        "password": {
                          "type": "string",
                          "referenceable": true,
                          "description": "authentication password",
                          "required": false,
                          "encrypted": true
                        }
                      },
                      {
                        "token": {
                          "type": "string",
                          "referenceable": true,
                          "description": "authentication token",
                          "required": false,
                          "encrypted": true
                        }
                      }
                    ],
                    "type": "record"
                  }
                },
                {
                  "provider": {
                    "required": true,
                    "type": "string",
                    "one_of": [
                      "mistralai",
                      "openai"
                    ],
                    "description": "which provider to use for embeddings"
                  }
                },
                {
                  "name": {
                    "required": true,
                    "type": "string",
                    "one_of": [
                      "text-embedding-3-large",
                      "text-embedding-3-small",
                      "mistral-embed"
                    ],
                    "description": "which AI model to use for generating embeddings"
                  }
                },
                {
                  "upstream_url": {
                    "required": false,
                    "type": "string",
                    "description": "upstream url for the embeddings"
                  }
                }
              ],
              "type": "record"
            }
          },
          {
            "vectordb": {
              "required": true,
              "fields": [
                {
                  "strategy": {
                    "required": true,
                    "type": "string",
                    "one_of": [
                      "redis"
                    ],
                    "description": "which vector database driver to use"
                  }
                },
                {
                  "dimensions": {
                    "required": true,
                    "type": "integer",
                    "description": "the desired dimensionality for the vectors"
                  }
                },
                {
                  "threshold": {
                    "required": true,
                    "type": "number",
                    "description": "the default similarity threshold for accepting semantic search results (float)"
                  }
                },
                {
                  "distance_metric": {
                    "required": true,
                    "type": "string",
                    "one_of": [
                      "cosine",
                      "euclidean"
                    ],
                    "description": "the distance metric to use for vector searches"
                  }
                },
                {
                  "redis": {
                    "required": true,
                    "shorthand_fields": [
                      {
                        "timeout": {
                          "deprecation": {
                            "removal_in_version": "4.0",
                            "message": "redis schema field `timeout` is deprecated, use `connect_timeout`, `send_timeout` and `read_timeout`"
                          },
                          "translate_backwards": [
                            "connect_timeout"
                          ],
                          "type": "integer"
                        }
                      },
                      {
                        "sentinel_addresses": {
                          "len_min": 1,
                          "type": "array",
                          "deprecation": {
                            "removal_in_version": "4.0",
                            "message": "sentinel_addresses is deprecated, please use sentinel_nodes instead"
                          },
                          "elements": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "cluster_addresses": {
                          "len_min": 1,
                          "type": "array",
                          "deprecation": {
                            "removal_in_version": "4.0",
                            "message": "cluster_addresses is deprecated, please use cluster_nodes instead"
                          },
                          "elements": {
                            "type": "string"
                          }
                        }
                      }
                    ],
                    "type": "record",
                    "fields": [
                      {
                        "host": {
                          "description": "A string representing a host name, such as example.com.",
                          "type": "string"
                        }
                      },
                      {
                        "port": {
                          "type": "integer",
                          "between": [
                            0,
                            65535
                          ],
                          "description": "An integer representing a port number between 0 and 65535, inclusive."
                        }
                      },
                      {
                        "connect_timeout": {
                          "type": "integer",
                          "between": [
                            0,
                            2147483646
                          ],
                          "default": 2000,
                          "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2."
                        }
                      },
                      {
                        "send_timeout": {
                          "type": "integer",
                          "between": [
                            0,
                            2147483646
                          ],
                          "default": 2000,
                          "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2."
                        }
                      },
                      {
                        "read_timeout": {
                          "type": "integer",
                          "between": [
                            0,
                            2147483646
                          ],
                          "default": 2000,
                          "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2."
                        }
                      },
                      {
                        "username": {
                          "type": "string",
                          "referenceable": true,
                          "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`."
                        }
                      },
                      {
                        "password": {
                          "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                          "type": "string",
                          "referenceable": true,
                          "encrypted": true
                        }
                      },
                      {
                        "sentinel_username": {
                          "type": "string",
                          "referenceable": true,
                          "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+."
                        }
                      },
                      {
                        "sentinel_password": {
                          "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                          "type": "string",
                          "referenceable": true,
                          "encrypted": true
                        }
                      },
                      {
                        "database": {
                          "type": "integer",
                          "default": 0,
                          "description": "Database to use for the Redis connection when using the `redis` strategy"
                        }
                      },
                      {
                        "keepalive_pool_size": {
                          "between": [
                            1,
                            2147483646
                          ],
                          "type": "integer",
                          "default": 256,
                          "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low."
                        }
                      },
                      {
                        "keepalive_backlog": {
                          "between": [
                            0,
                            2147483646
                          ],
                          "type": "integer",
                          "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`."
                        }
                      },
                      {
                        "sentinel_master": {
                          "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                          "type": "string"
                        }
                      },
                      {
                        "sentinel_role": {
                          "type": "string",
                          "one_of": [
                            "master",
                            "slave",
                            "any"
                          ],
                          "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel."
                        }
                      },
                      {
                        "sentinel_nodes": {
                          "type": "array",
                          "elements": {
                            "fields": [
                              {
                                "host": {
                                  "type": "string",
                                  "required": true,
                                  "default": "127.0.0.1",
                                  "description": "A string representing a host name, such as example.com."
                                }
                              },
                              {
                                "port": {
                                  "type": "integer",
                                  "between": [
                                    0,
                                    65535
                                  ],
                                  "default": 6379,
                                  "description": "An integer representing a port number between 0 and 65535, inclusive."
                                }
                              }
                            ],
                            "type": "record"
                          },
                          "len_min": 1,
                          "required": false,
                          "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element."
                        }
                      },
                      {
                        "cluster_nodes": {
                          "type": "array",
                          "elements": {
                            "fields": [
                              {
                                "ip": {
                                  "type": "string",
                                  "required": true,
                                  "default": "127.0.0.1",
                                  "description": "A string representing a host name, such as example.com."
                                }
                              },
                              {
                                "port": {
                                  "type": "integer",
                                  "between": [
                                    0,
                                    65535
                                  ],
                                  "default": 6379,
                                  "description": "An integer representing a port number between 0 and 65535, inclusive."
                                }
                              }
                            ],
                            "type": "record"
                          },
                          "len_min": 1,
                          "required": false,
                          "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element."
                        }
                      },
                      {
                        "ssl": {
                          "required": false,
                          "type": "boolean",
                          "default": false,
                          "description": "If set to true, uses SSL to connect to Redis."
                        }
                      },
                      {
                        "ssl_verify": {
                          "required": false,
                          "type": "boolean",
                          "default": false,
                          "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly."
                        }
                      },
                      {
                        "server_name": {
                          "required": false,
                          "type": "string",
                          "description": "A string representing an SNI (server name indication) value for TLS."
                        }
                      },
                      {
                        "cluster_max_redirections": {
                          "required": false,
                          "type": "integer",
                          "default": 5,
                          "description": "Maximum retry attempts for redirection."
                        }
                      }
                    ],
                    "entity_checks": [
                      {
                        "mutually_exclusive_sets": {
                          "set1": [
                            "sentinel_master",
                            "sentinel_role",
                            "sentinel_nodes"
                          ],
                          "set2": [
                            "host",
                            "port"
                          ]
                        }
                      },
                      {
                        "mutually_exclusive_sets": {
                          "set1": [
                            "sentinel_master",
                            "sentinel_role",
                            "sentinel_nodes"
                          ],
                          "set2": [
                            "cluster_nodes"
                          ]
                        }
                      },
                      {
                        "mutually_exclusive_sets": {
                          "set1": [
                            "cluster_nodes"
                          ],
                          "set2": [
                            "host",
                            "port"
                          ]
                        }
                      },
                      {
                        "mutually_required": [
                          "sentinel_master",
                          "sentinel_role",
                          "sentinel_nodes"
                        ]
                      },
                      {
                        "mutually_required": [
                          "host",
                          "port"
                        ]
                      },
                      {
                        "mutually_required": [
                          "connect_timeout",
                          "send_timeout",
                          "read_timeout"
                        ]
                      }
                    ]
                  }
                }
              ],
              "type": "record"
            }
          }
        ],
        "required": true
      }
    }
  ],
  "entity_checks": [

  ]
}