{
  "supported_partials": {
    "redis-ee": [
      "config.redis"
    ]
  },
  "fields": [
    {
      "protocols": {
        "type": "set",
        "required": true,
        "description": "A set of strings representing HTTP protocols.",
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        }
      }
    },
    {
      "config": {
        "type": "record",
        "fields": [
          {
            "identifier": {
              "type": "string",
              "required": true,
              "description": "The type of identifier used to generate the rate limit key. Defines the scope used to increment the rate limiting counters. Can be `ip`, `credential`, `consumer`, `service`, `header`, `path` or `consumer-group`. Note if `identifier` is `consumer-group`, the plugin must be applied on a consumer group entity. Because a consumer may belong to multiple consumer groups, the plugin needs to know explicitly which consumer group to limit the rate.",
              "default": "consumer",
              "one_of": [
                "ip",
                "credential",
                "consumer",
                "service",
                "header",
                "path",
                "consumer-group"
              ]
            }
          },
          {
            "window_type": {
              "description": "Sets the time window type to either `sliding` (default) or `fixed`. Sliding windows apply the rate limiting logic while taking into account previous hit rates (from the window that immediately precedes the current) using a dynamic weight. Fixed windows consist of buckets that are statically assigned to a definitive time range, each request is mapped to only one fixed window based on its timestamp and will affect only that window's counters.",
              "default": "sliding",
              "one_of": [
                "fixed",
                "sliding"
              ],
              "type": "string"
            }
          },
          {
            "sync_rate": {
              "type": "number",
              "description": "How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 will sync the counters in the specified number of seconds. The minimum allowed interval is 0.02 seconds (20ms)."
            }
          },
          {
            "namespace": {
              "type": "string",
              "description": "The rate limiting library namespace to use for this plugin instance. Counter data and sync configuration is isolated in each namespace. NOTE: For the plugin instances sharing the same namespace, all the configurations that are required for synchronizing counters, e.g. `strategy`, `redis`, `sync_rate`, `dictionary_name`, need to be the same."
            }
          },
          {
            "llm_providers": {
              "description": "The provider config. Takes an array of `name`, `limit` and `window size` values.",
              "elements": {
                "type": "record",
                "fields": [
                  {
                    "window_size": {
                      "description": "One or more window sizes to apply a limit to (defined in seconds). There must be a matching number of window limits and sizes specified.",
                      "elements": {
                        "type": "number"
                      },
                      "type": "array",
                      "required": true
                    }
                  },
                  {
                    "name": {
                      "description": "The LLM provider to which the rate limit applies.",
                      "type": "string",
                      "one_of": [
                        "openai",
                        "azure",
                        "anthropic",
                        "cohere",
                        "mistral",
                        "llama2",
                        "bedrock",
                        "gemini",
                        "huggingface",
                        "requestPrompt"
                      ],
                      "required": true
                    }
                  },
                  {
                    "limit": {
                      "description": "One or more requests-per-window limits to apply. There must be a matching number of window limits and sizes specified.",
                      "elements": {
                        "type": "number"
                      },
                      "type": "array",
                      "required": true
                    }
                  }
                ]
              },
              "type": "array",
              "required": true
            }
          },
          {
            "strategy": {
              "type": "string",
              "required": true,
              "description": "The rate-limiting strategy to use for retrieving and incrementing the limits. Available values are: `local` and `cluster`.",
              "default": "local",
              "one_of": [
                "cluster",
                "redis",
                "local"
              ]
            }
          },
          {
            "dictionary_name": {
              "description": "The shared dictionary where counters are stored. When the plugin is configured to synchronize counter data externally (that is `config.strategy` is `cluster` or `redis` and `config.sync_rate` isn't `-1`), this dictionary serves as a buffer to populate counters in the data store on each synchronization cycle.",
              "default": "kong_rate_limiting_counters",
              "type": "string",
              "required": true
            }
          },
          {
            "hide_client_headers": {
              "description": "Optionally hide informative response headers that would otherwise provide information about the current status of limits and counters.",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "retry_after_jitter_max": {
              "description": "The upper bound of a jitter (random delay) in seconds to be added to the `Retry-After` header of denied requests (status = `429`) in order to prevent all the clients from coming back at the same time. The lower bound of the jitter is `0`; in this case, the `Retry-After` header is equal to the `RateLimit-Reset` header.",
              "default": 0,
              "type": "number"
            }
          },
          {
            "header_name": {
              "type": "string",
              "description": "A string representing an HTTP header name."
            }
          },
          {
            "path": {
              "type": "string",
              "match_none": [
                {
                  "pattern": "//",
                  "err": "must not have empty segments"
                }
              ],
              "starts_with": "/",
              "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes)."
            }
          },
          {
            "redis": {
              "type": "record",
              "entity_checks": [
                {
                  "mutually_required": [
                    "host",
                    "port"
                  ]
                },
                {
                  "mutually_required": [
                    "sentinel_master",
                    "sentinel_role",
                    "sentinel_nodes"
                  ]
                },
                {
                  "mutually_required": [
                    "connect_timeout",
                    "send_timeout",
                    "read_timeout"
                  ]
                },
                {
                  "conditional": {
                    "then_match": {
                      "required": true
                    },
                    "if_match": {
                      "eq": true
                    },
                    "then_field": "host",
                    "if_field": "connection_is_proxied"
                  }
                },
                {
                  "custom_entity_check": {
                    "field_sources": [
                      "database",
                      "connection_is_proxied"
                    ],
                    "run_with_missing_fields": true
                  }
                },
                {
                  "custom_entity_check": {
                    "field_sources": [
                      "cluster_nodes",
                      "connection_is_proxied"
                    ],
                    "run_with_missing_fields": true
                  }
                },
                {
                  "custom_entity_check": {
                    "field_sources": [
                      "sentinel_role",
                      "connection_is_proxied"
                    ],
                    "run_with_missing_fields": true
                  }
                }
              ],
              "required": true,
              "fields": [
                {
                  "host": {
                    "type": "string",
                    "default": "127.0.0.1",
                    "description": "A string representing a host name, such as example.com."
                  }
                },
                {
                  "port": {
                    "type": "integer",
                    "default": 6379,
                    "between": [
                      0,
                      65535
                    ],
                    "description": "An integer representing a port number between 0 and 65535, inclusive."
                  }
                },
                {
                  "connect_timeout": {
                    "type": "integer",
                    "default": 2000,
                    "between": [
                      0,
                      2147483646
                    ],
                    "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2."
                  }
                },
                {
                  "send_timeout": {
                    "type": "integer",
                    "default": 2000,
                    "between": [
                      0,
                      2147483646
                    ],
                    "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2."
                  }
                },
                {
                  "read_timeout": {
                    "type": "integer",
                    "default": 2000,
                    "between": [
                      0,
                      2147483646
                    ],
                    "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2."
                  }
                },
                {
                  "username": {
                    "type": "string",
                    "referenceable": true,
                    "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`."
                  }
                },
                {
                  "password": {
                    "type": "string",
                    "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                    "referenceable": true,
                    "encrypted": true
                  }
                },
                {
                  "sentinel_username": {
                    "type": "string",
                    "referenceable": true,
                    "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+."
                  }
                },
                {
                  "sentinel_password": {
                    "type": "string",
                    "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                    "referenceable": true,
                    "encrypted": true
                  }
                },
                {
                  "database": {
                    "type": "integer",
                    "default": 0,
                    "description": "Database to use for the Redis connection when using the `redis` strategy"
                  }
                },
                {
                  "keepalive_pool_size": {
                    "type": "integer",
                    "default": 256,
                    "between": [
                      1,
                      2147483646
                    ],
                    "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low."
                  }
                },
                {
                  "keepalive_backlog": {
                    "type": "integer",
                    "between": [
                      0,
                      2147483646
                    ],
                    "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`."
                  }
                },
                {
                  "sentinel_master": {
                    "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                    "type": "string"
                  }
                },
                {
                  "sentinel_role": {
                    "type": "string",
                    "one_of": [
                      "master",
                      "slave",
                      "any"
                    ],
                    "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel."
                  }
                },
                {
                  "sentinel_nodes": {
                    "type": "array",
                    "len_min": 1,
                    "required": false,
                    "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                    "elements": {
                      "type": "record",
                      "fields": [
                        {
                          "host": {
                            "type": "string",
                            "default": "127.0.0.1",
                            "description": "A string representing a host name, such as example.com.",
                            "required": true
                          }
                        },
                        {
                          "port": {
                            "type": "integer",
                            "default": 6379,
                            "between": [
                              0,
                              65535
                            ],
                            "description": "An integer representing a port number between 0 and 65535, inclusive."
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "cluster_nodes": {
                    "type": "array",
                    "len_min": 1,
                    "required": false,
                    "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                    "elements": {
                      "type": "record",
                      "fields": [
                        {
                          "ip": {
                            "type": "string",
                            "default": "127.0.0.1",
                            "description": "A string representing a host name, such as example.com.",
                            "required": true
                          }
                        },
                        {
                          "port": {
                            "type": "integer",
                            "default": 6379,
                            "between": [
                              0,
                              65535
                            ],
                            "description": "An integer representing a port number between 0 and 65535, inclusive."
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "ssl": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set to true, uses SSL to connect to Redis.",
                    "required": false
                  }
                },
                {
                  "ssl_verify": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly.",
                    "required": false
                  }
                },
                {
                  "server_name": {
                    "type": "string",
                    "description": "A string representing an SNI (server name indication) value for TLS.",
                    "required": false
                  }
                },
                {
                  "cluster_max_redirections": {
                    "description": "Maximum retry attempts for redirection.",
                    "default": 5,
                    "type": "integer",
                    "required": false
                  }
                },
                {
                  "connection_is_proxied": {
                    "type": "boolean",
                    "default": false,
                    "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address.",
                    "required": false
                  }
                }
              ],
              "shorthand_fields": [
                {
                  "timeout": {
                    "type": "integer",
                    "deprecation": {
                      "message": "redis schema field `timeout` is deprecated, use `connect_timeout`, `send_timeout` and `read_timeout`",
                      "replaced_with": [
                        {
                          "path": [
                            "connect_timeout"
                          ]
                        },
                        {
                          "path": [
                            "send_timeout"
                          ]
                        },
                        {
                          "path": [
                            "read_timeout"
                          ]
                        }
                      ],
                      "removal_in_version": "4.0"
                    }
                  }
                },
                {
                  "sentinel_addresses": {
                    "type": "array",
                    "len_min": 1,
                    "elements": {
                      "type": "string"
                    },
                    "deprecation": {
                      "message": "sentinel_addresses is deprecated, please use sentinel_nodes instead",
                      "replaced_with": [
                        {
                          "path": [
                            "sentinel_nodes"
                          ]
                        }
                      ],
                      "removal_in_version": "4.0"
                    }
                  }
                },
                {
                  "cluster_addresses": {
                    "type": "array",
                    "len_min": 1,
                    "elements": {
                      "type": "string"
                    },
                    "deprecation": {
                      "message": "cluster_addresses is deprecated, please use cluster_nodes instead",
                      "replaced_with": [
                        {
                          "path": [
                            "cluster_nodes"
                          ]
                        }
                      ],
                      "removal_in_version": "4.0"
                    }
                  }
                }
              ]
            }
          },
          {
            "disable_penalty": {
              "description": "If set to `true`, this doesn't count denied requests (status = `429`). If set to `false`, all requests, including denied ones, are counted. This parameter only affects the `sliding` window_type and the request prompt provider.",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "request_prompt_count_function": {
              "description": "If defined, it use custom function to count requests for the request prompt provider",
              "type": "string",
              "required": false
            }
          },
          {
            "error_code": {
              "description": "Set a custom error code to return when the rate limit is exceeded.",
              "default": 429,
              "gt": 0,
              "type": "number"
            }
          },
          {
            "error_message": {
              "description": "Set a custom error message to return when the rate limit is exceeded.",
              "default": "AI token rate limit exceeded for provider(s): ",
              "type": "string"
            }
          },
          {
            "error_hide_providers": {
              "description": "Optionally hide informative response that would otherwise provide information about the provider in the error message.",
              "default": false,
              "type": "boolean"
            }
          },
          {
            "tokens_count_strategy": {
              "type": "string",
              "required": true,
              "description": "What tokens to use for cost calculation. Available values are: `total_tokens` `prompt_tokens`, `completion_tokens` or `cost`.",
              "default": "total_tokens",
              "one_of": [
                "total_tokens",
                "prompt_tokens",
                "completion_tokens",
                "cost"
              ]
            }
          },
          {
            "llm_format": {
              "type": "string",
              "required": false,
              "description": "LLM input and output format and schema to use",
              "default": "openai",
              "one_of": [
                "openai",
                "bedrock",
                "gemini",
                "cohere",
                "huggingface"
              ]
            }
          }
        ],
        "required": true
      }
    }
  ],
  "entity_checks": [
    {
      "custom_entity_check": {
        "field_sources": [
          "config"
        ]
      }
    }
  ]
}