{
  "entity_checks": [
    {
      "custom_entity_check": {
        "field_sources": [
          "config"
        ]
      }
    }
  ],
  "fields": [
    {
      "protocols": {
        "type": "set",
        "required": true,
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "ws",
          "wss"
        ],
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "ws",
            "wss"
          ]
        }
      }
    },
    {
      "consumer_group": {
        "eq": null,
        "reference": "consumer_groups",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "type": "foreign"
      }
    },
    {
      "consumer": {
        "eq": null,
        "reference": "consumers",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "type": "foreign"
      }
    },
    {
      "config": {
        "type": "record",
        "fields": [
          {
            "ldap_host": {
              "type": "string",
              "required": true,
              "description": "Host on which the LDAP server is running."
            }
          },
          {
            "ldap_password": {
              "type": "string",
              "encrypted": true,
              "description": "The password to the LDAP server.",
              "referenceable": true
            }
          },
          {
            "ldap_port": {
              "default": 389,
              "description": "TCP port where the LDAP server is listening. 389 is the default port for non-SSL LDAP and AD. 636 is the port required for SSL LDAP and AD. If `ldaps` is configured, you must use port 636.",
              "type": "number"
            }
          },
          {
            "bind_dn": {
              "type": "string",
              "description": "The DN to bind to. Used to perform LDAP search of user. This `bind_dn` should have permissions to search for the user being authenticated.",
              "referenceable": true
            }
          },
          {
            "ldaps": {
              "default": false,
              "required": true,
              "description": "Set it to `true` to use `ldaps`, a secure protocol (that can be configured to TLS) to connect to the LDAP server. When `ldaps` is configured, you must use port 636. If the `ldap` setting is enabled, ensure the `start_tls` setting is disabled.",
              "type": "boolean"
            }
          },
          {
            "start_tls": {
              "default": false,
              "required": true,
              "description": "Set it to `true` to issue StartTLS (Transport Layer Security) extended operation over `ldap` connection. If the `start_tls` setting is enabled, ensure the `ldaps` setting is disabled.",
              "type": "boolean"
            }
          },
          {
            "verify_ldap_host": {
              "default": false,
              "required": true,
              "description": "Set to `true` to authenticate LDAP server. The server certificate will be verified according to the CA certificates specified by the `lua_ssl_trusted_certificate` directive.",
              "type": "boolean"
            }
          },
          {
            "base_dn": {
              "type": "string",
              "required": true,
              "description": "Base DN as the starting point for the search; e.g., 'dc=example,dc=com'."
            }
          },
          {
            "attribute": {
              "type": "string",
              "required": true,
              "description": "Attribute to be used to search the user; e.g., \"cn\"."
            }
          },
          {
            "cache_ttl": {
              "default": 60,
              "required": true,
              "description": "Cache expiry time in seconds.",
              "type": "number"
            }
          },
          {
            "hide_credentials": {
              "default": false,
              "description": "An optional boolean value telling the plugin to hide the credential to the upstream server. It will be removed by Kong before proxying the request.",
              "type": "boolean"
            }
          },
          {
            "timeout": {
              "default": 10000,
              "description": "An optional timeout in milliseconds when waiting for connection with LDAP server.",
              "type": "number"
            }
          },
          {
            "keepalive": {
              "default": 60000,
              "description": "An optional value in milliseconds that defines how long an idle connection to LDAP server will live before being closed.",
              "type": "number"
            }
          },
          {
            "anonymous": {
              "default": "",
              "type": "string",
              "len_min": 0,
              "description": "An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`. Note that this value must refer to the consumer `id` or `username` attribute, and **not** its `custom_id`."
            }
          },
          {
            "header_type": {
              "default": "ldap",
              "description": "An optional string to use as part of the Authorization header. By default, a valid Authorization header looks like this: `Authorization: ldap base64(username:password)`. If `header_type` is set to \"basic\", then the Authorization header would be `Authorization: basic base64(username:password)`. Note that `header_type` can take any string, not just `'ldap'` and `'basic'`.",
              "type": "string"
            }
          },
          {
            "consumer_optional": {
              "default": false,
              "required": false,
              "description": "Whether consumer mapping is optional. If `consumer_optional=true`, the plugin will not attempt to associate a consumer with the LDAP authenticated user.",
              "type": "boolean"
            }
          },
          {
            "consumer_by": {
              "default": [
                "username",
                "custom_id"
              ],
              "type": "array",
              "elements": {
                "type": "string",
                "one_of": [
                  "username",
                  "custom_id"
                ]
              },
              "description": "Whether to authenticate consumers based on `username`, `custom_id`, or both.",
              "required": false
            }
          },
          {
            "group_base_dn": {
              "type": "string",
              "description": "Sets a distinguished name (DN) for the entry where LDAP searches for groups begin. This field is case-insensitive.',dc=com'."
            }
          },
          {
            "group_name_attribute": {
              "type": "string",
              "description": "Sets the attribute holding the name of a group, typically called `name` (in Active Directory) or `cn` (in OpenLDAP). This field is case-insensitive."
            }
          },
          {
            "group_member_attribute": {
              "default": "memberOf",
              "description": "Sets the attribute holding the members of the LDAP group. This field is case-sensitive.",
              "type": "string"
            }
          },
          {
            "log_search_results": {
              "default": false,
              "required": false,
              "description": "Displays all the LDAP search results received from the LDAP server for debugging purposes. Not recommended to be enabled in a production environment.",
              "type": "boolean"
            }
          },
          {
            "groups_required": {
              "type": "array",
              "required": false,
              "description": "The groups required to be present in the LDAP search result for successful authorization. This config parameter works in both **AND** / **OR** cases. - When `[\"group1 group2\"]` are in the same array indices, both `group1` AND `group2` need to be present in the LDAP search result. - When `[\"group1\", \"group2\"]` are in different array indices, either `group1` OR `group2` need to be present in the LDAP search result.",
              "elements": {
                "type": "string"
              }
            }
          },
          {
            "realm": {
              "type": "string",
              "required": false,
              "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value."
            }
          }
        ],
        "required": true
      }
    }
  ]
}