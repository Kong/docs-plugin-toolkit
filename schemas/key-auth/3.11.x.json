{
  "fields": [
    {
      "consumer": {
        "reference": "consumers",
        "type": "foreign",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "protocols": {
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "ws",
          "wss"
        ],
        "type": "set",
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "ws",
            "wss"
          ]
        },
        "required": true
      }
    },
    {
      "consumer_group": {
        "reference": "consumer_groups",
        "type": "foreign",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "config": {
        "fields": [
          {
            "key_names": {
              "elements": {
                "description": "A string representing an HTTP header name.",
                "type": "string"
              },
              "type": "array",
              "default": [
                "apikey"
              ],
              "required": true,
              "description": "Describes an array of parameter names where the plugin will look for a key. The key names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen."
            }
          },
          {
            "hide_credentials": {
              "default": false,
              "type": "boolean",
              "required": true,
              "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`, the plugin strips the credential from the request."
            }
          },
          {
            "anonymous": {
              "type": "string",
              "description": "An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`."
            }
          },
          {
            "key_in_header": {
              "default": true,
              "type": "boolean",
              "required": true,
              "description": "If enabled (default), the plugin reads the request header and tries to find the key in it."
            }
          },
          {
            "key_in_query": {
              "default": true,
              "type": "boolean",
              "required": true,
              "description": "If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it."
            }
          },
          {
            "key_in_body": {
              "default": false,
              "type": "boolean",
              "required": true,
              "description": "If enabled, the plugin reads the request body. Supported MIME types: `application/www-form-urlencoded`, `application/json`, and `multipart/form-data`."
            }
          },
          {
            "run_on_preflight": {
              "default": true,
              "type": "boolean",
              "required": true,
              "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests are always allowed."
            }
          },
          {
            "realm": {
              "type": "string",
              "required": false,
              "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value."
            }
          },
          {
            "identity_realms": {
              "default": [
                {
                  "region": null,
                  "id": null,
                  "scope": "cp"
                }
              ],
              "type": "set",
              "elements": {
                "fields": [
                  {
                    "scope": {
                      "type": "string",
                      "one_of": [
                        "cp",
                        "realm"
                      ]
                    }
                  },
                  {
                    "id": {
                      "auto": false,
                      "type": "string",
                      "uuid": true,
                      "description": "A string representing a UUID (universally unique identifier)."
                    }
                  },
                  {
                    "region": {
                      "type": "string"
                    }
                  }
                ],
                "type": "record",
                "entity_checks": [
                  {
                    "conditional": {
                      "then_field": "id",
                      "if_field": "scope",
                      "then_match": {
                        "required": true
                      },
                      "if_match": {
                        "eq": "realm"
                      }
                    }
                  },
                  {
                    "conditional": {
                      "then_field": "id",
                      "if_field": "scope",
                      "then_match": {
                        "required": false,
                        "eq": null
                      },
                      "if_match": {
                        "eq": "cp"
                      }
                    }
                  },
                  {
                    "conditional": {
                      "then_field": "region",
                      "if_field": "scope",
                      "then_match": {
                        "required": false,
                        "eq": null
                      },
                      "if_match": {
                        "eq": "cp"
                      }
                    }
                  }
                ]
              },
              "description": "A configuration of Konnect Identity Realms that indicate where to source a consumer from."
            }
          }
        ],
        "type": "record",
        "required": true
      }
    }
  ],
  "entity_checks": [

  ]
}