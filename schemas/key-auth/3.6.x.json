{
  "entity_checks": [

  ],
  "fields": [
    {
      "consumer": {
        "reference": "consumers",
        "type": "foreign",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "protocols": {
        "required": true,
        "type": "set",
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "ws",
          "wss"
        ],
        "elements": {
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "ws",
            "wss"
          ],
          "type": "string"
        }
      }
    },
    {
      "consumer_group": {
        "reference": "consumer_groups",
        "type": "foreign",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "config": {
        "required": true,
        "type": "record",
        "fields": [
          {
            "key_names": {
              "elements": {
                "description": "A string representing an HTTP header name.",
                "type": "string"
              },
              "type": "array",
              "default": [
                "apikey"
              ],
              "required": true,
              "description": "Describes an array of parameter names where the plugin will look for a key. The key names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen."
            }
          },
          {
            "hide_credentials": {
              "required": true,
              "type": "boolean",
              "default": false,
              "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`, the plugin strips the credential from the request."
            }
          },
          {
            "anonymous": {
              "description": "An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`.",
              "type": "string"
            }
          },
          {
            "key_in_header": {
              "required": true,
              "type": "boolean",
              "default": true,
              "description": "If enabled (default), the plugin reads the request header and tries to find the key in it."
            }
          },
          {
            "key_in_query": {
              "required": true,
              "type": "boolean",
              "default": true,
              "description": "If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it."
            }
          },
          {
            "key_in_body": {
              "required": true,
              "type": "boolean",
              "default": false,
              "description": "If enabled, the plugin reads the request body. Supported MIME types: `application/www-form-urlencoded`, `application/json`, and `multipart/form-data`."
            }
          },
          {
            "run_on_preflight": {
              "required": true,
              "type": "boolean",
              "default": true,
              "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests are always allowed."
            }
          }
        ]
      }
    }
  ]
}