{
  "fields": [
    {
      "protocols": {
        "required": true,
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        },
        "type": "set",
        "description": "A set of strings representing HTTP protocols."
      }
    },
    {
      "consumer_group": {
        "type": "foreign",
        "reference": "consumer_groups",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "consumer": {
        "type": "foreign",
        "reference": "consumers",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed."
      }
    },
    {
      "config": {
        "required": true,
        "type": "record",
        "fields": [
          {
            "lookup_header_name": {
              "type": "string",
              "required": true,
              "default": "Authorization",
              "description": "The name of the header to look for the JWE token."
            }
          },
          {
            "forward_header_name": {
              "type": "string",
              "required": true,
              "default": "Authorization",
              "description": "The name of the header that is used to set the decrypted value."
            }
          },
          {
            "key_sets": {
              "elements": {
                "type": "string"
              },
              "required": true,
              "type": "array",
              "description": "Denote the name or names of all Key Sets that should be inspected when trying to find a suitable key to decrypt the JWE token."
            }
          },
          {
            "strict": {
              "type": "boolean",
              "default": true,
              "description": "Defines how the plugin behaves in cases where no token was found in the request. When using `strict` mode, the request requires a token to be present and subsequently raise an error if none could be found."
            }
          }
        ]
      }
    }
  ],
  "entity_checks": [

  ]
}