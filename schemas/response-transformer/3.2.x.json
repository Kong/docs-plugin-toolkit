{
  "fields": [
    {
      "protocols": {
        "elements": {
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ],
          "type": "string"
        },
        "required": true,
        "type": "set",
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ]
      }
    },
    {
      "config": {
        "fields": [
          {
            "remove": {
              "fields": [
                {
                  "json": {
                    "elements": {
                      "type": "string"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of property names. Remove the property from the JSON body if it is present."
                  }
                },
                {
                  "headers": {
                    "elements": {
                      "type": "string"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of header names. Unset the header(s) with the given name."
                  }
                }
              ],
              "type": "record",
              "required": true,
              "examples": [
                {
                  "headers": [
                    "x-toremove",
                    "x-another-one"
                  ],
                  "json": [
                    "json-key-toremove",
                    "another-json-key"
                  ]
                }
              ]
            }
          },
          {
            "rename": {
              "fields": [
                {
                  "headers": {
                    "elements": {
                      "match": "^[^:]+:.*$",
                      "type": "string"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of `original_header_name:new_header_name` pairs. If the header `original_headername` is already set, rename it to `new_headername`. Ignored if the header is not already set."
                  }
                }
              ],
              "type": "record",
              "required": true
            }
          },
          {
            "replace": {
              "fields": [
                {
                  "json": {
                    "elements": {
                      "type": "string",
                      "match": "^[^:]+:.*$"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of `property:value` pairs. If and only if the parameter is already present, replace its old value with the new one. Ignored if the parameter is not already present."
                  }
                },
                {
                  "json_types": {
                    "elements": {
                      "one_of": [
                        "boolean",
                        "number",
                        "string"
                      ],
                      "type": "string"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of JSON type names. Specify the types of the JSON values returned when\nreplacing JSON properties. Each string\nelement can be one of: boolean, number, or string."
                  }
                },
                {
                  "headers": {
                    "elements": {
                      "type": "string",
                      "match": "^[^:]+:.*$"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of `headername:value` pairs. If and only if the header is already set, replace its old value with the new one. Ignored if the header is not already set."
                  }
                }
              ],
              "type": "record",
              "required": true
            }
          },
          {
            "add": {
              "fields": [
                {
                  "json": {
                    "elements": {
                      "type": "string",
                      "match": "^[^:]+:.*$"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of `property:value` pairs. If and only if the property is not present, add a new property with the given value to the JSON body. Ignored if the property is already present."
                  }
                },
                {
                  "json_types": {
                    "elements": {
                      "one_of": [
                        "boolean",
                        "number",
                        "string"
                      ],
                      "type": "string"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of JSON type names. Specify the types of the JSON values returned when adding\na new JSON property. Each string element can be one of: boolean, number, or string."
                  }
                },
                {
                  "headers": {
                    "elements": {
                      "type": "string",
                      "match": "^[^:]+:.*$"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of `headername:value` pairs. If and only if the header is not already set, set a new header with the given value. Ignored if the header is already set."
                  }
                }
              ],
              "type": "record",
              "required": true,
              "examples": [
                {
                  "headers": [
                    "x-new-header:value",
                    "x-another-header:something"
                  ],
                  "json": [
                    "new-json-key:some_value",
                    "another-json-key:some_value"
                  ],
                  "json_types": [
                    "string",
                    "boolean",
                    "number"
                  ]
                }
              ]
            }
          },
          {
            "append": {
              "fields": [
                {
                  "json": {
                    "elements": {
                      "type": "string",
                      "match": "^[^:]+:.*$"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of `property:value` pairs. If the property is not present in the JSON body, add it with the given value. If it is already present, the two values (old and new) will be aggregated in an array."
                  }
                },
                {
                  "json_types": {
                    "elements": {
                      "one_of": [
                        "boolean",
                        "number",
                        "string"
                      ],
                      "type": "string"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of JSON type names. Specify the types of the JSON values returned when appending\nJSON properties. Each string element can be one of: boolean, number, or string."
                  }
                },
                {
                  "headers": {
                    "elements": {
                      "type": "string",
                      "match": "^[^:]+:.*$"
                    },
                    "required": true,
                    "type": "array",
                    "default": [

                    ],
                    "description": "List of `headername:value` pairs. If the header is not set, set it with the given value. If it is\nalready set, a new header with the same name and the new value will be set. Each string\nelement can be one of: boolean, number, or string."
                  }
                }
              ],
              "type": "record",
              "required": true,
              "examples": [
                {
                  "headers": [
                    "x-existing-header:some_value",
                    "x-another-header:some_value"
                  ]
                }
              ]
            }
          }
        ],
        "type": "record",
        "required": true
      }
    }
  ]
}