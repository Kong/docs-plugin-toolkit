{
  "fields": [
    {
      "consumer": {
        "reference": "consumers",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "eq": null,
        "type": "foreign"
      }
    },
    {
      "protocols": {
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": true,
        "description": "A set of strings representing HTTP protocols.",
        "type": "set",
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        }
      }
    },
    {
      "consumer_group": {
        "reference": "consumer_groups",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "eq": null,
        "type": "foreign"
      }
    },
    {
      "config": {
        "fields": [
          {
            "opa_protocol": {
              "default": "http",
              "one_of": [
                "http",
                "https"
              ],
              "type": "string",
              "description": "The protocol to use when talking to Open Policy Agent (OPA) server. Allowed protocols are `http` and `https`."
            }
          },
          {
            "opa_host": {
              "default": "localhost",
              "required": true,
              "type": "string",
              "description": "A string representing a host name, such as example.com."
            }
          },
          {
            "opa_port": {
              "default": 8181,
              "type": "integer",
              "between": [
                0,
                65535
              ],
              "required": true,
              "description": "An integer representing a port number between 0 and 65535, inclusive."
            }
          },
          {
            "opa_path": {
              "match_none": [
                {
                  "pattern": "//",
                  "err": "must not have empty segments"
                }
              ],
              "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
              "starts_with": "/",
              "required": true,
              "type": "string"
            }
          },
          {
            "include_service_in_opa_input": {
              "default": false,
              "type": "boolean",
              "description": "If set to true, the Kong Gateway Service object in use for the current request is included as input to OPA."
            }
          },
          {
            "include_route_in_opa_input": {
              "default": false,
              "type": "boolean",
              "description": "If set to true, the Kong Gateway Route object in use for the current request is included as input to OPA."
            }
          },
          {
            "include_consumer_in_opa_input": {
              "default": false,
              "type": "boolean",
              "description": "If set to true, the Kong Gateway Consumer object in use for the current request (if any) is included as input to OPA."
            }
          },
          {
            "include_body_in_opa_input": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "include_parsed_json_body_in_opa_input": {
              "default": false,
              "type": "boolean",
              "description": "If set to true and the `Content-Type` header of the current request is `application/json`, the request body will be JSON decoded and the decoded struct is included as input to OPA."
            }
          },
          {
            "include_uri_captures_in_opa_input": {
              "default": false,
              "type": "boolean",
              "description": "If set to true, the regex capture groups captured on the Kong Gateway Route's path field in the current request (if any) are included as input to OPA."
            }
          },
          {
            "ssl_verify": {
              "default": true,
              "required": true,
              "type": "boolean",
              "description": "If set to true, the OPA certificate will be verified according to the CA certificates specified in lua_ssl_trusted_certificate."
            }
          }
        ],
        "type": "record",
        "required": true
      }
    }
  ],
  "entity_checks": [

  ]
}