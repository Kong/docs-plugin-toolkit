{
  "fields": [
    {
      "protocols": {
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        },
        "type": "set",
        "description": "A set of strings representing HTTP protocols.",
        "required": true,
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ]
      }
    },
    {
      "consumer_group": {
        "type": "foreign",
        "eq": null,
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "reference": "consumer_groups"
      }
    },
    {
      "config": {
        "required": true,
        "type": "record",
        "entity_checks": [
          {
            "conditional": {
              "then_field": "max_namespaces",
              "if_match": {
                "eq": true
              },
              "then_match": {
                "required": true
              },
              "if_field": "namespace_aware"
            }
          },
          {
            "conditional": {
              "then_field": "prefix",
              "if_match": {
                "eq": true
              },
              "then_match": {
                "required": true
              },
              "if_field": "namespace_aware"
            }
          },
          {
            "conditional": {
              "then_field": "namespaceuri",
              "if_match": {
                "eq": true
              },
              "then_match": {
                "required": true
              },
              "if_field": "namespace_aware"
            }
          }
        ],
        "fields": [
          {
            "checked_content_types": {
              "elements": {
                "required": true,
                "type": "string",
                "match": "^[^%s]+%/[^ ;]+$"
              },
              "type": "set",
              "description": "A list of Content-Type values with payloads that must be validated.",
              "required": true,
              "default": [
                "application/xml"
              ]
            }
          },
          {
            "allowed_content_types": {
              "elements": {
                "required": true,
                "type": "string",
                "match": "^[^%s]+%/[^ ;]+$"
              },
              "type": "set",
              "description": "A list of Content-Type values with payloads that are allowed, but aren't validated.",
              "required": true,
              "default": [

              ]
            }
          },
          {
            "allow_dtd": {
              "default": false,
              "type": "boolean",
              "description": "Indicates whether an XML Document Type Definition (DTD) section is allowed.",
              "required": true
            }
          },
          {
            "namespace_aware": {
              "default": true,
              "type": "boolean",
              "description": "If not parsing namespace aware, all prefixes and namespace attributes will be counted as regular attributes and element names, and validated as such.",
              "required": true
            }
          },
          {
            "max_depth": {
              "type": "integer",
              "description": "Maximum depth of tags. Child elements such as Text or Comments are not counted as another level.",
              "required": true,
              "gt": 0,
              "default": 50
            }
          },
          {
            "max_children": {
              "type": "integer",
              "description": "Maximum number of children allowed (Element, Text, Comment, ProcessingInstruction, CDATASection). Note: Adjacent text and CDATA sections are counted as one. For example, text-cdata-text-cdata is one child.",
              "required": true,
              "gt": 0,
              "default": 100
            }
          },
          {
            "max_attributes": {
              "type": "integer",
              "description": "Maximum number of attributes allowed on a tag, including default ones. Note: If namespace-aware parsing is disabled, then the namespaces definitions are counted as attributes.",
              "required": true,
              "gt": 0,
              "default": 100
            }
          },
          {
            "max_namespaces": {
              "type": "integer",
              "description": "Maximum number of namespaces defined on a tag. This value is required if parsing is namespace-aware.",
              "required": false,
              "gt": 0,
              "default": 20
            }
          },
          {
            "document": {
              "type": "integer",
              "description": "Maximum size of the entire document.",
              "required": true,
              "gt": 0,
              "default": 10485760
            }
          },
          {
            "buffer": {
              "type": "integer",
              "description": "Maximum size of the unparsed buffer (see below).",
              "required": true,
              "gt": 0,
              "default": 1048576
            }
          },
          {
            "comment": {
              "type": "integer",
              "description": "Maximum size of comments.",
              "required": true,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "localname": {
              "type": "integer",
              "description": "Maximum size of the localname. This applies to tags and attributes.",
              "required": true,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "prefix": {
              "type": "integer",
              "description": "Maximum size of the prefix. This applies to tags and attributes. This value is required if parsing is namespace-aware.",
              "required": false,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "namespaceuri": {
              "type": "integer",
              "description": "Maximum size of the namespace URI. This value is required if parsing is namespace-aware.",
              "required": false,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "attribute": {
              "type": "integer",
              "description": "Maximum size of the attribute value.",
              "required": true,
              "gt": 0,
              "default": 1048576
            }
          },
          {
            "text": {
              "type": "integer",
              "description": "Maximum text inside tags (counted over all adjacent text/CDATA elements combined).",
              "required": true,
              "gt": 0,
              "default": 1048576
            }
          },
          {
            "pitarget": {
              "type": "integer",
              "description": "Maximum size of processing instruction targets.",
              "required": true,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "pidata": {
              "type": "integer",
              "description": "Maximum size of processing instruction data.",
              "required": true,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "entityname": {
              "type": "integer",
              "description": "Maximum size of entity names in EntityDecl.",
              "required": true,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "entity": {
              "type": "integer",
              "description": "Maximum size of entity values in EntityDecl.",
              "required": true,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "entityproperty": {
              "type": "integer",
              "description": "Maximum size of systemId, publicId, or notationName in EntityDecl.",
              "required": true,
              "gt": 0,
              "default": 1024
            }
          },
          {
            "bla_max_amplification": {
              "type": "number",
              "description": "Sets the maximum allowed amplification. This protects against the Billion Laughs Attack.",
              "required": true,
              "gt": 1,
              "default": 100
            }
          },
          {
            "bla_threshold": {
              "type": "integer",
              "description": "Sets the threshold after which the protection starts. This protects against the Billion Laughs Attack.",
              "required": true,
              "gt": 1024,
              "default": 8388608
            }
          }
        ]
      }
    }
  ],
  "entity_checks": [

  ]
}