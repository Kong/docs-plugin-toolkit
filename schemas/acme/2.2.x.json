{
  "fields": [
    {
      "consumer": {
        "type": "foreign",
        "eq": null,
        "reference": "consumers"
      }
    },
    {
      "service": {
        "type": "foreign",
        "eq": null,
        "reference": "services"
      }
    },
    {
      "route": {
        "type": "foreign",
        "eq": null,
        "reference": "routes"
      }
    },
    {
      "protocols": {
        "type": "set",
        "required": true,
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        },
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ]
      }
    },
    {
      "config": {
        "type": "record",
        "required": true,
        "fields": [
          {
            "account_email": {
              "type": "string",
              "match": "%w*%p*@+%w*%.?%w*",
              "required": true,
              "description": "The account identifier. Can be reused in a different plugin instance."
            }
          },
          {
            "api_uri": {
              "type": "string",
              "default": "https://acme-v02.api.letsencrypt.org/directory",
              "description": "The ACMEv2 API endpoint to use. You can specify the [Let's Encrypt staging environment](https://letsencrypt.org/docs/staging-environment/) for testing. Kong doesn't automatically delete staging certificates. If you use the same domain in test and production environments, you need to manually delete those certificates after testing."
            }
          },
          {
            "tos_accepted": {
              "type": "boolean",
              "default": false,
              "description": "If you are using Let's Encrypt, you must set this to `true` to agree the [Terms of Service](https://letsencrypt.org/repository/)."
            }
          },
          {
            "cert_type": {
              "type": "string",
              "one_of": [
                "rsa",
                "ecc"
              ],
              "default": "rsa",
              "description": "The certificate type to create. The possible values are `'rsa'` for RSA certificate or `'ecc'` for EC certificate."
            }
          },
          {
            "renew_threshold_days": {
              "type": "number",
              "default": 14,
              "description": " Days remaining to renew the certificate before it expires."
            }
          },
          {
            "domains": {
              "type": "array",
              "elements": {
                "type": "string",
                "match_any": {
                  "patterns": [
                    "^%*%.",
                    "%.%*$",
                    "^[^*]*$"
                  ],
                  "err": "invalid wildcard: must be placed at leftmost or rightmost label"
                },
                "match_all": [
                  {
                    "err": "invalid wildcard: must have at most one wildcard",
                    "pattern": "^[^*]*%*?[^*]*$"
                  }
                ]
              },
              "description": "The list of domains to create certificates for. To match subdomains under `example.com`, use `*.example.com`.\nRegex pattern is not supported.\n\nThis parameter is only used to match domains, not to specify the Common Name\nor Subject Alternative Name to create certificates. Each domain must have its own certificate.\nThe ACME plugin checks this configuration before checking any certificate in `storage` when serving the certificate of a request.\n\nIf this field is left empty, all top-level domains (TLDs) are allowed."
            }
          },
          {
            "fail_backoff_minutes": {
              "type": "number",
              "default": 5,
              "description": "Minutes to wait for each domain that fails to create a certificate. This applies to both a\nnew certificate and a renewal certificate."
            }
          },
          {
            "storage": {
              "type": "string",
              "one_of": [
                "kong",
                "shm",
                "redis",
                "consul",
                "vault"
              ],
              "default": "shm",
              "description": "The backend storage type to use. The possible values are `'kong'`, `'shm'`, `'redis'`, `'consul'`, or `'vault'`. In DB-less mode, `'kong'` storage is unavailable. Note that `'shm'` storage does not persist during Kong restarts and does not work for Kong running on different machines, so consider using one of `'kong'`, `'redis'`, `'consul'`, or `'vault'` in production. Please refer to the Hybrid Mode sections below as well."
            }
          },
          {
            "storage_config": {
              "type": "record",
              "required": true,
              "fields": [
                {
                  "shm": {
                    "type": "record",
                    "required": true,
                    "fields": [
                      {
                        "shm_name": {
                          "type": "string",
                          "default": "kong"
                        }
                      }
                    ]
                  }
                },
                {
                  "kong": {
                    "type": "record",
                    "required": true,
                    "fields": [

                    ]
                  }
                },
                {
                  "redis": {
                    "type": "record",
                    "required": true,
                    "fields": [
                      {
                        "host": {
                          "type": "string"
                        }
                      },
                      {
                        "port": {
                          "type": "integer",
                          "between": [
                            0,
                            65535
                          ]
                        }
                      },
                      {
                        "database": {
                          "type": "number"
                        }
                      },
                      {
                        "auth": {
                          "type": "string"
                        }
                      }
                    ]
                  }
                },
                {
                  "consul": {
                    "type": "record",
                    "required": true,
                    "fields": [
                      {
                        "https": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      {
                        "host": {
                          "type": "string"
                        }
                      },
                      {
                        "port": {
                          "type": "integer",
                          "between": [
                            0,
                            65535
                          ]
                        }
                      },
                      {
                        "kv_path": {
                          "type": "string"
                        }
                      },
                      {
                        "timeout": {
                          "type": "number"
                        }
                      },
                      {
                        "token": {
                          "type": "string"
                        }
                      }
                    ]
                  }
                },
                {
                  "vault": {
                    "type": "record",
                    "required": true,
                    "fields": [
                      {
                        "https": {
                          "type": "boolean",
                          "default": false
                        }
                      },
                      {
                        "host": {
                          "type": "string"
                        }
                      },
                      {
                        "port": {
                          "type": "integer",
                          "between": [
                            0,
                            65535
                          ]
                        }
                      },
                      {
                        "kv_path": {
                          "type": "string"
                        }
                      },
                      {
                        "timeout": {
                          "type": "number"
                        }
                      },
                      {
                        "token": {
                          "type": "string"
                        }
                      },
                      {
                        "tls_verify": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      {
                        "tls_server_name": {
                          "type": "string"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "description": "Storage configs for each backend storage. See [Storage configuration considerations](#storage-config)\nfor information on its default values."
          }
        ]
      }
    }
  ]
}
