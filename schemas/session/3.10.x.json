{
  "entity_checks": [

  ],
  "fields": [
    {
      "consumer": {
        "reference": "consumers",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "type": "foreign",
        "eq": null
      }
    },
    {
      "protocols": {
        "elements": {
          "description": "A string representing a protocol, such as HTTP or HTTPS.",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "tcp",
            "tls",
            "tls_passthrough",
            "udp",
            "ws",
            "wss"
          ],
          "type": "string"
        },
        "description": "A set of strings representing protocols.",
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "type": "set",
        "required": true
      }
    },
    {
      "consumer_group": {
        "reference": "consumer_groups",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "type": "foreign",
        "eq": null
      }
    },
    {
      "config": {
        "fields": [
          {
            "secret": {
              "type": "string",
              "referenceable": true,
              "description": "The secret that is used in keyed HMAC generation.",
              "encrypted": true,
              "default": "WKzHLADIGTA9J6nV29ppiqFxmLWstNnPGEtEJ2gQA70z",
              "required": false
            }
          },
          {
            "storage": {
              "description": "Determines where the session data is stored. `kong`: Stores encrypted session data into Kong's current database strategy; the cookie will not contain any session data. `cookie`: Stores encrypted session data within the cookie itself.",
              "type": "string",
              "default": "cookie",
              "one_of": [
                "cookie",
                "kong"
              ]
            }
          },
          {
            "audience": {
              "description": "The session audience, which is the intended target application. For example `\"my-application\"`.",
              "type": "string",
              "default": "default"
            }
          },
          {
            "idling_timeout": {
              "description": "The session cookie idle time, in seconds.",
              "type": "number",
              "default": 900
            }
          },
          {
            "rolling_timeout": {
              "description": "The session cookie rolling timeout, in seconds. Specifies how long the session can be used until it needs to be renewed.",
              "type": "number",
              "default": 3600
            }
          },
          {
            "absolute_timeout": {
              "description": "The session cookie absolute timeout, in seconds. Specifies how long the session can be used until it is no longer valid.",
              "type": "number",
              "default": 86400
            }
          },
          {
            "stale_ttl": {
              "description": "The duration, in seconds, after which an old cookie is discarded, starting from the moment when the session becomes outdated and is replaced by a new one.",
              "type": "number",
              "default": 10
            }
          },
          {
            "cookie_name": {
              "description": "The name of the cookie.",
              "type": "string",
              "default": "session"
            }
          },
          {
            "cookie_path": {
              "description": "The resource in the host where the cookie is available.",
              "type": "string",
              "default": "/"
            }
          },
          {
            "cookie_domain": {
              "description": "The domain with which the cookie is intended to be exchanged.",
              "type": "string"
            }
          },
          {
            "cookie_same_site": {
              "description": "Determines whether and how a cookie may be sent with cross-site requests.",
              "type": "string",
              "default": "Strict",
              "one_of": [
                "Strict",
                "Lax",
                "None",
                "Default"
              ]
            }
          },
          {
            "cookie_http_only": {
              "description": "Applies the `HttpOnly` tag so that the cookie is sent only to a server.",
              "type": "boolean",
              "default": true
            }
          },
          {
            "cookie_secure": {
              "description": "Applies the Secure directive so that the cookie may be sent to the server only with an encrypted request over the HTTPS protocol.",
              "type": "boolean",
              "default": true
            }
          },
          {
            "remember": {
              "description": "Enables or disables persistent sessions.",
              "type": "boolean",
              "default": false
            }
          },
          {
            "remember_cookie_name": {
              "description": "Persistent session cookie name. Use with the `remember` configuration parameter.",
              "type": "string",
              "default": "remember"
            }
          },
          {
            "remember_rolling_timeout": {
              "description": "The persistent session rolling timeout window, in seconds.",
              "type": "number",
              "default": 604800
            }
          },
          {
            "remember_absolute_timeout": {
              "description": "The persistent session absolute timeout limit, in seconds.",
              "type": "number",
              "default": 2592000
            }
          },
          {
            "response_headers": {
              "description": "List of information to include, as headers, in the response to the downstream.",
              "type": "set",
              "elements": {
                "type": "string",
                "one_of": [
                  "id",
                  "audience",
                  "subject",
                  "timeout",
                  "idling-timeout",
                  "rolling-timeout",
                  "absolute-timeout"
                ]
              }
            }
          },
          {
            "request_headers": {
              "description": "List of information to include, as headers, in the response to the downstream.",
              "type": "set",
              "elements": {
                "type": "string",
                "one_of": [
                  "id",
                  "audience",
                  "subject",
                  "timeout",
                  "idling-timeout",
                  "rolling-timeout",
                  "absolute-timeout"
                ]
              }
            }
          },
          {
            "read_body_for_logout": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "logout_methods": {
              "description": "A set of HTTP methods that the plugin will respond to.",
              "type": "set",
              "default": [
                "POST",
                "DELETE"
              ],
              "elements": {
                "type": "string",
                "one_of": [
                  "GET",
                  "POST",
                  "DELETE"
                ]
              }
            }
          },
          {
            "logout_query_arg": {
              "description": "The query argument passed to logout requests.",
              "type": "string",
              "default": "session_logout"
            }
          },
          {
            "logout_post_arg": {
              "description": "The POST argument passed to logout requests. Do not change this property.",
              "type": "string",
              "default": "session_logout"
            }
          },
          {
            "hash_subject": {
              "description": "Whether to hash or not the subject when store_metadata is enabled.",
              "type": "boolean",
              "default": false
            }
          },
          {
            "store_metadata": {
              "description": "Whether to also store metadata of sessions, such as collecting data of sessions for a specific audience belonging to a specific subject.",
              "type": "boolean",
              "default": false
            }
          }
        ],
        "type": "record",
        "shorthand_fields": [
          {
            "cookie_lifetime": {
              "type": "number"
            }
          },
          {
            "cookie_idletime": {
              "type": "number"
            }
          },
          {
            "cookie_renew": {
              "type": "number"
            }
          },
          {
            "cookie_discard": {
              "type": "number"
            }
          },
          {
            "cookie_samesite": {
              "type": "string"
            }
          },
          {
            "cookie_httponly": {
              "type": "boolean"
            }
          },
          {
            "cookie_persistent": {
              "type": "boolean"
            }
          }
        ],
        "required": true
      }
    }
  ]
}