{
  "entity_checks": [

  ],
  "fields": [
    {
      "protocols": {
        "required": true,
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https"
          ]
        },
        "type": "set",
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "description": "A set of strings representing HTTP protocols."
      }
    },
    {
      "config": {
        "fields": [
          {
            "route_type": {
              "one_of": [
                "llm/v1/chat",
                "llm/v1/completions",
                "preserve"
              ],
              "description": "The model's operation implementation, for this provider. Set to `preserve` to pass through without transformation.",
              "required": true,
              "type": "string"
            }
          },
          {
            "auth": {
              "fields": [
                {
                  "header_name": {
                    "required": false,
                    "description": "If AI model requires authentication via Authorization or API key header, specify its name here.",
                    "referenceable": true,
                    "type": "string"
                  }
                },
                {
                  "header_value": {
                    "description": "Specify the full auth header value for 'header_name', for example 'Bearer key' or just 'key'.",
                    "referenceable": true,
                    "type": "string",
                    "required": false,
                    "encrypted": true
                  }
                },
                {
                  "param_name": {
                    "required": false,
                    "description": "If AI model requires authentication via query parameter, specify its name here.",
                    "referenceable": true,
                    "type": "string"
                  }
                },
                {
                  "param_value": {
                    "description": "Specify the full parameter value for 'param_name'.",
                    "referenceable": true,
                    "type": "string",
                    "required": false,
                    "encrypted": true
                  }
                },
                {
                  "param_location": {
                    "one_of": [
                      "query",
                      "body"
                    ],
                    "description": "Specify whether the 'param_name' and 'param_value' options go in a query string, or the POST form/JSON body.",
                    "required": false,
                    "type": "string"
                  }
                },
                {
                  "azure_use_managed_identity": {
                    "required": false,
                    "description": "Set true to use the Azure Cloud Managed Identity (or user-assigned identity) to authenticate with Azure-provider models.",
                    "default": false,
                    "type": "boolean"
                  }
                },
                {
                  "azure_client_id": {
                    "required": false,
                    "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client ID.",
                    "referenceable": true,
                    "type": "string"
                  }
                },
                {
                  "azure_client_secret": {
                    "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the client secret.",
                    "referenceable": true,
                    "type": "string",
                    "required": false,
                    "encrypted": true
                  }
                },
                {
                  "azure_tenant_id": {
                    "required": false,
                    "description": "If azure_use_managed_identity is set to true, and you need to use a different user-assigned identity for this LLM instance, set the tenant ID.",
                    "referenceable": true,
                    "type": "string"
                  }
                },
                {
                  "gcp_use_service_account": {
                    "required": false,
                    "description": "Use service account auth for GCP-based providers and models.",
                    "default": false,
                    "type": "boolean"
                  }
                },
                {
                  "gcp_service_account_json": {
                    "description": "Set this field to the full JSON of the GCP service account to authenticate, if required. If null (and gcp_use_service_account is true), Kong will attempt to read from environment variable `GCP_SERVICE_ACCOUNT`.",
                    "referenceable": true,
                    "type": "string",
                    "required": false,
                    "encrypted": true
                  }
                },
                {
                  "aws_access_key_id": {
                    "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_ACCESS_KEY_ID environment variable for this plugin instance.",
                    "referenceable": true,
                    "type": "string",
                    "required": false,
                    "encrypted": true
                  }
                },
                {
                  "aws_secret_access_key": {
                    "description": "Set this if you are using an AWS provider (Bedrock) and you are authenticating using static IAM User credentials. Setting this will override the AWS_SECRET_ACCESS_KEY environment variable for this plugin instance.",
                    "referenceable": true,
                    "type": "string",
                    "required": false,
                    "encrypted": true
                  }
                },
                {
                  "allow_override": {
                    "required": false,
                    "description": "If enabled, the authorization header or parameter can be overridden in the request by the value configured in the plugin.",
                    "default": false,
                    "type": "boolean"
                  }
                }
              ],
              "required": false,
              "type": "record"
            }
          },
          {
            "model": {
              "fields": [
                {
                  "provider": {
                    "one_of": [
                      "openai",
                      "azure",
                      "anthropic",
                      "cohere",
                      "mistral",
                      "llama2",
                      "gemini",
                      "bedrock"
                    ],
                    "description": "AI provider request format - Kong translates requests to and from the specified backend compatible formats.",
                    "required": true,
                    "type": "string"
                  }
                },
                {
                  "name": {
                    "type": "string",
                    "description": "Model name to execute.",
                    "required": false
                  }
                },
                {
                  "options": {
                    "fields": [
                      {
                        "max_tokens": {
                          "required": false,
                          "description": "Defines the max_tokens, if using chat or completion models.",
                          "default": 256,
                          "type": "integer"
                        }
                      },
                      {
                        "input_cost": {
                          "gt": 0,
                          "description": "Defines the cost per 1M tokens in your prompt.",
                          "required": false,
                          "type": "number"
                        }
                      },
                      {
                        "output_cost": {
                          "gt": 0,
                          "description": "Defines the cost per 1M tokens in the output of the AI.",
                          "required": false,
                          "type": "number"
                        }
                      },
                      {
                        "temperature": {
                          "between": [
                            0,
                            5
                          ],
                          "description": "Defines the matching temperature, if using chat or completion models.",
                          "required": false,
                          "type": "number"
                        }
                      },
                      {
                        "top_p": {
                          "between": [
                            0,
                            1
                          ],
                          "description": "Defines the top-p probability mass, if supported.",
                          "required": false,
                          "type": "number"
                        }
                      },
                      {
                        "top_k": {
                          "between": [
                            0,
                            500
                          ],
                          "description": "Defines the top-k most likely tokens, if supported.",
                          "required": false,
                          "type": "integer"
                        }
                      },
                      {
                        "anthropic_version": {
                          "type": "string",
                          "description": "Defines the schema/API version, if using Anthropic provider.",
                          "required": false
                        }
                      },
                      {
                        "azure_instance": {
                          "type": "string",
                          "description": "Instance name for Azure OpenAI hosted models.",
                          "required": false
                        }
                      },
                      {
                        "azure_api_version": {
                          "required": false,
                          "description": "'api-version' for Azure OpenAI instances.",
                          "default": "2023-05-15",
                          "type": "string"
                        }
                      },
                      {
                        "azure_deployment_id": {
                          "type": "string",
                          "description": "Deployment ID for Azure OpenAI instances.",
                          "required": false
                        }
                      },
                      {
                        "llama2_format": {
                          "one_of": [
                            "raw",
                            "openai",
                            "ollama"
                          ],
                          "description": "If using llama2 provider, select the upstream message format.",
                          "required": false,
                          "type": "string"
                        }
                      },
                      {
                        "mistral_format": {
                          "one_of": [
                            "openai",
                            "ollama"
                          ],
                          "description": "If using mistral provider, select the upstream message format.",
                          "required": false,
                          "type": "string"
                        }
                      },
                      {
                        "upstream_url": {
                          "required": false,
                          "type": "string",
                          "description": "Manually specify or override the full URL to the AI operation endpoints, when calling (self-)hosted models, or for running via a private endpoint."
                        }
                      },
                      {
                        "upstream_path": {
                          "description": "Manually specify or override the AI operation path, used when e.g. using the 'preserve' route_type.",
                          "type": "string",
                          "required": false
                        }
                      },
                      {
                        "gemini": {
                          "fields": [
                            {
                              "api_endpoint": {
                                "type": "string",
                                "description": "If running Gemini on Vertex, specify the regional API endpoint (hostname only).",
                                "required": false
                              }
                            },
                            {
                              "project_id": {
                                "type": "string",
                                "description": "If running Gemini on Vertex, specify the project ID.",
                                "required": false
                              }
                            },
                            {
                              "location_id": {
                                "type": "string",
                                "description": "If running Gemini on Vertex, specify the location ID.",
                                "required": false
                              }
                            }
                          ],
                          "required": false,
                          "entity_checks": [
                            {
                              "mutually_required": [
                                "api_endpoint",
                                "project_id",
                                "location_id"
                              ]
                            }
                          ],
                          "type": "record"
                        }
                      },
                      {
                        "bedrock": {
                          "fields": [
                            {
                              "aws_region": {
                                "description": "If using AWS providers (Bedrock) you can override the `AWS_REGION` environment variable by setting this option.",
                                "type": "string",
                                "required": false
                              }
                            }
                          ],
                          "required": false,
                          "type": "record"
                        }
                      }
                    ],
                    "type": "record",
                    "required": false,
                    "description": "Key/value settings for the model"
                  }
                }
              ],
              "required": true,
              "type": "record"
            }
          },
          {
            "logging": {
              "fields": [
                {
                  "log_statistics": {
                    "required": true,
                    "description": "If enabled and supported by the driver, will add model usage and token metrics into the Kong log plugin(s) output.",
                    "default": false,
                    "type": "boolean"
                  }
                },
                {
                  "log_payloads": {
                    "required": true,
                    "description": "If enabled, will log the request and response body into the Kong log plugin(s) output.",
                    "default": false,
                    "type": "boolean"
                  }
                }
              ],
              "required": true,
              "type": "record"
            }
          },
          {
            "response_streaming": {
              "required": false,
              "description": "Whether to 'optionally allow', 'deny', or 'always' (force) the streaming of answers via server sent events.",
              "type": "string",
              "default": "allow",
              "one_of": [
                "allow",
                "deny",
                "always"
              ]
            }
          },
          {
            "max_request_body_size": {
              "gt": 0,
              "description": "max allowed body size allowed to be introspected",
              "default": 8192,
              "type": "integer"
            }
          },
          {
            "model_name_header": {
              "description": "Display the model name selected in the X-Kong-LLM-Model response header",
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "type": "record",
        "entity_checks": [
          {
            "conditional": {
              "then_err": "bedrock and gemini only support auth.allow_override = false",
              "if_match": {
                "one_of": [
                  "bedrock",
                  "gemini"
                ]
              },
              "then_field": "auth.allow_override",
              "if_field": "model.provider",
              "then_match": {
                "eq": false
              }
            }
          },
          {
            "mutually_required": [
              "auth.header_name",
              "auth.header_value"
            ]
          },
          {
            "mutually_required": [
              "auth.param_name",
              "auth.param_value",
              "auth.param_location"
            ]
          },
          {
            "conditional_at_least_one_of": {
              "if_match": {
                "one_of": [
                  "llama2"
                ]
              },
              "then_err": "must set %s for llama2 provider",
              "if_field": "model.provider",
              "then_at_least_one_of": [
                "model.options.llama2_format"
              ]
            }
          },
          {
            "conditional_at_least_one_of": {
              "if_match": {
                "one_of": [
                  "mistral"
                ]
              },
              "then_err": "must set %s for mistral provider",
              "if_field": "model.provider",
              "then_at_least_one_of": [
                "model.options.mistral_format"
              ]
            }
          },
          {
            "conditional_at_least_one_of": {
              "if_match": {
                "one_of": [
                  "anthropic"
                ]
              },
              "then_err": "must set %s for anthropic provider",
              "if_field": "model.provider",
              "then_at_least_one_of": [
                "model.options.anthropic_version"
              ]
            }
          },
          {
            "conditional_at_least_one_of": {
              "if_match": {
                "one_of": [
                  "azure"
                ]
              },
              "then_err": "must set %s for azure provider",
              "if_field": "model.provider",
              "then_at_least_one_of": [
                "model.options.azure_instance"
              ]
            }
          },
          {
            "conditional_at_least_one_of": {
              "if_match": {
                "one_of": [
                  "azure"
                ]
              },
              "then_err": "must set %s for azure provider",
              "if_field": "model.provider",
              "then_at_least_one_of": [
                "model.options.azure_api_version"
              ]
            }
          },
          {
            "conditional_at_least_one_of": {
              "if_match": {
                "one_of": [
                  "azure"
                ]
              },
              "then_err": "must set %s for azure provider",
              "if_field": "model.provider",
              "then_at_least_one_of": [
                "model.options.azure_deployment_id"
              ]
            }
          },
          {
            "conditional_at_least_one_of": {
              "if_match": {
                "one_of": [
                  "llama2"
                ]
              },
              "then_err": "must set %s for self-hosted providers/models",
              "if_field": "model.provider",
              "then_at_least_one_of": [
                "model.options.upstream_url"
              ]
            }
          },
          {
            "custom_entity_check": {
              "field_sources": [
                "route_type",
                "model",
                "logging"
              ]
            }
          }
        ],
        "required": true
      }
    }
  ]
}