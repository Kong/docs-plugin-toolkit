{
  "entity_checks": [
    {
      "custom_entity_check": {
        "field_sources": [
          "config"
        ]
      }
    }
  ],
  "fields": [
    {
      "protocols": {
        "type": "set",
        "required": true,
        "default": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "ws",
          "wss"
        ],
        "elements": {
          "type": "string",
          "one_of": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "ws",
            "wss"
          ]
        }
      }
    },
    {
      "consumer_group": {
        "type": "foreign",
        "reference": "consumer_groups",
        "description": "Custom type for representing a foreign key with a null value allowed.",
        "eq": null
      }
    },
    {
      "config": {
        "fields": [
          {
            "bootstrap_servers": {
              "type": "set",
              "description": "Set of bootstrap brokers in a `{host: host, port: port}` list format.",
              "elements": {
                "type": "record",
                "fields": [
                  {
                    "host": {
                      "required": true,
                      "description": "A string representing a host name, such as example.com.",
                      "type": "string"
                    }
                  },
                  {
                    "port": {
                      "required": true,
                      "between": [
                        0,
                        65535
                      ],
                      "description": "An integer representing a port number between 0 and 65535, inclusive.",
                      "type": "integer"
                    }
                  }
                ]
              }
            }
          },
          {
            "topic": {
              "required": true,
              "type": "string",
              "description": "The Kafka topic to publish to."
            }
          },
          {
            "key_query_arg": {
              "required": false,
              "type": "string",
              "description": "The request query parameter name that contains the Kafka message key. If specified, messages with the same key will be sent to the same Kafka partition, ensuring consistent ordering."
            }
          },
          {
            "timeout": {
              "default": 10000,
              "description": "Socket timeout in milliseconds.",
              "type": "integer"
            }
          },
          {
            "keepalive": {
              "default": 60000,
              "type": "integer"
            }
          },
          {
            "keepalive_enabled": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "authentication": {
              "required": true,
              "type": "record",
              "fields": [
                {
                  "strategy": {
                    "one_of": [
                      "sasl"
                    ],
                    "required": false,
                    "type": "string",
                    "description": "The authentication strategy for the plugin, the only option for the value is `sasl`."
                  }
                },
                {
                  "mechanism": {
                    "one_of": [
                      "PLAIN",
                      "SCRAM-SHA-256",
                      "SCRAM-SHA-512"
                    ],
                    "required": false,
                    "type": "string",
                    "description": "The SASL authentication mechanism.  Supported options: `PLAIN`, `SCRAM-SHA-256` or `SCRAM-SHA-512`."
                  }
                },
                {
                  "tokenauth": {
                    "required": false,
                    "type": "boolean",
                    "description": "Enable this to indicate `DelegationToken` authentication"
                  }
                },
                {
                  "user": {
                    "required": false,
                    "description": "Username for SASL authentication.",
                    "referenceable": true,
                    "type": "string",
                    "encrypted": true
                  }
                },
                {
                  "password": {
                    "required": false,
                    "description": "Password for SASL authentication.",
                    "referenceable": true,
                    "type": "string",
                    "encrypted": true
                  }
                }
              ]
            }
          },
          {
            "schema_registry": {
              "description": "The plugin-global schema registry configuration. This can be overwritten by the topic configuration.",
              "required": true,
              "fields": [
                {
                  "confluent": {
                    "required": false,
                    "type": "record",
                    "fields": [
                      {
                        "url": {
                          "required": false,
                          "type": "string",
                          "description": "The URL of the schema registry."
                        }
                      },
                      {
                        "ttl": {
                          "between": [
                            0,
                            3600
                          ],
                          "type": "number",
                          "description": "The TTL in seconds for the schema registry cache."
                        }
                      },
                      {
                        "ssl_verify": {
                          "type": "boolean",
                          "default": true,
                          "description": "Set to false to disable SSL certificate verification when connecting to the schema registry."
                        }
                      },
                      {
                        "authentication": {
                          "fields": [
                            {
                              "mode": {
                                "required": true,
                                "type": "string",
                                "one_of": [
                                  "none",
                                  "basic",
                                  "oauth2"
                                ],
                                "default": "none",
                                "description": "Authentication mode to use with the schema registry."
                              }
                            },
                            {
                              "basic": {
                                "required": false,
                                "type": "record",
                                "fields": [
                                  {
                                    "username": {
                                      "encrypted": true,
                                      "required": true,
                                      "type": "string",
                                      "referenceable": true
                                    }
                                  },
                                  {
                                    "password": {
                                      "encrypted": true,
                                      "required": true,
                                      "type": "string",
                                      "referenceable": true
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "oauth2": {
                                "required": false,
                                "type": "record",
                                "fields": [
                                  {
                                    "token_endpoint": {
                                      "required": true,
                                      "description": "The token endpoint URI.",
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "token_headers": {
                                      "description": "Extra headers to be passed in the token endpoint request.",
                                      "type": "map",
                                      "keys": {
                                        "description": "A string representing an HTTP header name.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "type": "string",
                                        "referenceable": true
                                      }
                                    }
                                  },
                                  {
                                    "token_post_args": {
                                      "description": "Extra post arguments to be passed in the token endpoint request.",
                                      "type": "map",
                                      "keys": {
                                        "type": "string"
                                      },
                                      "values": {
                                        "type": "string",
                                        "referenceable": true
                                      }
                                    }
                                  },
                                  {
                                    "grant_type": {
                                      "required": true,
                                      "type": "string",
                                      "one_of": [
                                        "client_credentials",
                                        "password"
                                      ],
                                      "default": "client_credentials",
                                      "description": "The OAuth grant type to be used."
                                    }
                                  },
                                  {
                                    "client_id": {
                                      "required": false,
                                      "description": "The client ID for the application registration in the IdP.",
                                      "encrypted": true,
                                      "type": "string",
                                      "referenceable": true
                                    }
                                  },
                                  {
                                    "client_secret": {
                                      "required": false,
                                      "description": "The client secret for the application registration in the IdP.",
                                      "encrypted": true,
                                      "type": "string",
                                      "referenceable": true
                                    }
                                  },
                                  {
                                    "username": {
                                      "required": false,
                                      "description": "The username to use if `config.oauth.grant_type` is set to `password`.",
                                      "encrypted": true,
                                      "type": "string",
                                      "referenceable": true
                                    }
                                  },
                                  {
                                    "password": {
                                      "required": false,
                                      "description": "The password to use if `config.oauth.grant_type` is set to `password`.",
                                      "encrypted": true,
                                      "type": "string",
                                      "referenceable": true
                                    }
                                  },
                                  {
                                    "scopes": {
                                      "required": false,
                                      "type": "array",
                                      "elements": {
                                        "type": "string"
                                      },
                                      "default": [
                                        "openid"
                                      ],
                                      "description": "List of scopes to request from the IdP when obtaining a new token."
                                    }
                                  },
                                  {
                                    "audience": {
                                      "required": false,
                                      "type": "array",
                                      "elements": {
                                        "type": "string"
                                      },
                                      "default": [],
                                      "description": "List of audiences passed to the IdP when obtaining a new token."
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "oauth2_client": {
                                "required": false,
                                "type": "record",
                                "fields": [
                                  {
                                    "auth_method": {
                                      "required": true,
                                      "type": "string",
                                      "one_of": [
                                        "client_secret_post",
                                        "client_secret_basic",
                                        "client_secret_jwt",
                                        "none"
                                      ],
                                      "default": "client_secret_post",
                                      "description": "The authentication method used in client requests to the IdP. Supported values are: `client_secret_basic` to send `client_id` and `client_secret` in the `Authorization: Basic` header, `client_secret_post` to send `client_id` and `client_secret` as part of the request body, or `client_secret_jwt` to send a JWT signed with the `client_secret` using the client assertion as part of the body."
                                    }
                                  },
                                  {
                                    "client_secret_jwt_alg": {
                                      "required": true,
                                      "type": "string",
                                      "one_of": [
                                        "HS512",
                                        "HS256"
                                      ],
                                      "default": "HS512",
                                      "description": "The algorithm to use with JWT when using `client_secret_jwt` authentication."
                                    }
                                  },
                                  {
                                    "http_version": {
                                      "description": "The HTTP version used for requests made by this plugin. Supported values: `1.1` for HTTP 1.1 and `1.0` for HTTP 1.0.",
                                      "required": false,
                                      "type": "number",
                                      "default": 1.1
                                    }
                                  },
                                  {
                                    "http_proxy": {
                                      "required": false,
                                      "description": "The proxy to use when making HTTP requests to the IdP.",
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "http_proxy_authorization": {
                                      "required": false,
                                      "type": "string",
                                      "description": "The `Proxy-Authorization` header value to be used with `http_proxy`."
                                    }
                                  },
                                  {
                                    "https_proxy": {
                                      "required": false,
                                      "description": "The proxy to use when making HTTPS requests to the IdP.",
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "https_proxy_authorization": {
                                      "required": false,
                                      "type": "string",
                                      "description": "The `Proxy-Authorization` header value to be used with `https_proxy`."
                                    }
                                  },
                                  {
                                    "no_proxy": {
                                      "required": false,
                                      "type": "string",
                                      "description": "A comma-separated list of hosts that should not be proxied."
                                    }
                                  },
                                  {
                                    "timeout": {
                                      "required": true,
                                      "description": "Network I/O timeout for requests to the IdP in milliseconds.",
                                      "between": [
                                        0,
                                        2147483646
                                      ],
                                      "default": 10000,
                                      "type": "integer"
                                    }
                                  },
                                  {
                                    "keep_alive": {
                                      "type": "boolean",
                                      "required": true,
                                      "description": "Whether to use keepalive connections to the IdP.",
                                      "default": true
                                    }
                                  },
                                  {
                                    "ssl_verify": {
                                      "type": "boolean",
                                      "required": false,
                                      "description": "Whether to verify the certificate presented by the IdP when using HTTPS.",
                                      "default": false
                                    }
                                  }
                                ]
                              }
                            }
                          ],
                          "required": true,
                          "entity_checks": [
                            {
                              "custom_entity_check": {
                                "field_sources": [
                                  "mode",
                                  "basic",
                                  "oauth2"
                                ]
                              }
                            }
                          ],
                          "type": "record"
                        }
                      },
                      {
                        "value_schema": {
                          "required": false,
                          "type": "record",
                          "fields": [
                            {
                              "subject_name": {
                                "required": false,
                                "type": "string",
                                "description": "The name of the subject"
                              }
                            },
                            {
                              "schema_version": {
                                "match_any": {
                                  "err": "must be either 'latest' or a positive integer",
                                  "patterns": [
                                    "^latest$",
                                    "^[0-9]+$"
                                  ]
                                },
                                "required": false,
                                "type": "string",
                                "description": "The schema version to use for serialization/deserialization. Use 'latest' to always fetch the most recent version."
                              }
                            }
                          ]
                        }
                      },
                      {
                        "key_schema": {
                          "required": false,
                          "type": "record",
                          "fields": [
                            {
                              "subject_name": {
                                "required": false,
                                "type": "string",
                                "description": "The name of the subject"
                              }
                            },
                            {
                              "schema_version": {
                                "match_any": {
                                  "err": "must be either 'latest' or a positive integer",
                                  "patterns": [
                                    "^latest$",
                                    "^[0-9]+$"
                                  ]
                                },
                                "required": false,
                                "type": "string",
                                "description": "The schema version to use for serialization/deserialization. Use 'latest' to always fetch the most recent version."
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": "record"
            }
          },
          {
            "security": {
              "required": true,
              "type": "record",
              "fields": [
                {
                  "certificate_id": {
                    "type": "string",
                    "required": false,
                    "description": "UUID of certificate entity for mTLS authentication.",
                    "uuid": true
                  }
                },
                {
                  "ssl": {
                    "required": false,
                    "type": "boolean",
                    "description": "Enables TLS."
                  }
                }
              ]
            }
          },
          {
            "cluster_name": {
              "auto": true,
              "required": false,
              "description": "An identifier for the Kafka cluster. By default, this field generates a random string. You can also set your own custom cluster identifier.  If more than one Kafka plugin is configured without a `cluster_name` (that is, if the default autogenerated value is removed), these plugins will use the same producer, and by extension, the same cluster. Logs will be sent to the leader of the cluster.",
              "type": "string"
            }
          },
          {
            "producer_request_acks": {
              "one_of": [
                -1,
                0,
                1
              ],
              "default": 1,
              "description": "The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments; 1 for only the leader; and -1 for the full ISR (In-Sync Replica set).",
              "type": "integer"
            }
          },
          {
            "producer_request_timeout": {
              "default": 2000,
              "description": "Time to wait for a Produce response in milliseconds",
              "type": "integer"
            }
          },
          {
            "producer_request_limits_messages_per_request": {
              "default": 200,
              "description": "Maximum number of messages to include into a single Produce request.",
              "type": "integer"
            }
          },
          {
            "producer_request_limits_bytes_per_request": {
              "default": 1048576,
              "description": "Maximum size of a Produce request in bytes.",
              "type": "integer"
            }
          },
          {
            "producer_request_retries_max_attempts": {
              "default": 10,
              "description": "Maximum number of retry attempts per single Produce request.",
              "type": "integer"
            }
          },
          {
            "producer_request_retries_backoff_timeout": {
              "default": 100,
              "description": "Backoff interval between retry attempts in milliseconds.",
              "type": "integer"
            }
          },
          {
            "producer_async": {
              "default": true,
              "description": "Flag to enable asynchronous mode.",
              "type": "boolean"
            }
          },
          {
            "producer_async_flush_timeout": {
              "default": 1000,
              "description": "Maximum time interval in milliseconds between buffer flushes in asynchronous mode.",
              "type": "integer"
            }
          },
          {
            "producer_async_buffering_limits_messages_in_memory": {
              "default": 50000,
              "description": "Maximum number of messages that can be buffered in memory in asynchronous mode.",
              "type": "integer"
            }
          },
          {
            "custom_fields_by_lua": {
              "keys": {
                "type": "string",
                "len_min": 1
              },
              "type": "map",
              "description": "Lua code as a key-value map",
              "values": {
                "len_min": 1,
                "type": "string"
              }
            }
          }
        ],
        "required": true,
        "entity_checks": [
          {
            "custom_entity_check": {
              "field_sources": [
                "authentication"
              ]
            }
          }
        ],
        "type": "record"
      }
    }
  ]
}