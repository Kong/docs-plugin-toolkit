{
  "properties": {
    "config": {
      "properties": {
        "block_on_first_violation": {
          "default": false,
          "description": "A boolean value that determines if the requests should be blocked as soon as one limit is being exceeded. This will block requests that are supposed to consume other limits too.",
          "type": "boolean"
        },
        "fault_tolerant": {
          "default": true,
          "description": "A boolean value that determines if the requests should be proxied even if Kong has troubles connecting a third-party datastore. If `true`, requests will be proxied anyway, effectively disabling the rate-limiting function until the datastore is working again. If `false`, then the clients will see `500` errors.",
          "type": "boolean"
        },
        "header_name": {
          "default": "x-kong-limit",
          "description": "The name of the response header used to increment the counters.",
          "type": "string"
        },
        "hide_client_headers": {
          "default": false,
          "description": "Optionally hide informative response headers.",
          "type": "boolean"
        },
        "limit_by": {
          "default": "consumer",
          "description": "The entity that will be used when aggregating the limits: `consumer`, `credential`, `ip`. If the `consumer` or the `credential` cannot be determined, the system will always fallback to `ip`.",
          "enum": [
            "consumer",
            "credential",
            "ip"
          ],
          "type": "string"
        },
        "limits": {
          "additionalProperties": true,
          "description": "A map that defines rate limits for the plugin.",
          "minLength": 1,
          "type": "object"
        },
        "policy": {
          "default": "local",
          "description": "The rate-limiting policies to use for retrieving and incrementing the limits.",
          "enum": [
            "cluster",
            "local",
            "redis"
          ],
          "type": "string"
        },
        "redis_database": {
          "default": 0,
          "description": "When using the `redis` policy, this property specifies Redis database to use.",
          "type": "number"
        },
        "redis_host": {
          "description": "When using the `redis` policy, this property specifies the address to the Redis server.",
          "type": "string"
        },
        "redis_password": {
          "description": "When using the `redis` policy, this property specifies the password to connect to the Redis server.",
          "minLength": 0,
          "type": "string"
        },
        "redis_port": {
          "default": 6379,
          "description": "When using the `redis` policy, this property specifies the port of the Redis server.",
          "maximum": 65535,
          "minimum": 0,
          "type": "integer"
        },
        "redis_server_name": {
          "description": "When using the `redis` policy with `redis_ssl` set to `true`, this property specifies the server name for the TLS extension Server Name Indication (SNI).",
          "type": "string"
        },
        "redis_ssl": {
          "default": false,
          "description": "When using the `redis` policy, this property specifies if SSL is used to connect to the Redis server.",
          "type": "boolean"
        },
        "redis_ssl_verify": {
          "default": false,
          "description": "When using the `redis` policy with `redis_ssl` set to `true`, this property specifies if the server SSL certificate is validated. Note that you need to configure the `lua_ssl_trusted_certificate` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly.",
          "type": "boolean"
        },
        "redis_timeout": {
          "default": 2000,
          "description": "When using the `redis` policy, this property specifies the timeout in milliseconds of any command submitted to the Redis server.",
          "type": "number"
        },
        "redis_username": {
          "description": "When using the `redis` policy, this property specifies the username to connect to the Redis server when ACL authentication is desired.\nThis requires Redis v6.0.0+. The username **cannot** be set to `default`.",
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing HTTP protocols.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}