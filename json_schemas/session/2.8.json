{
  "properties": {
    "config": {
      "properties": {
        "cookie_discard": {
          "default": 10,
          "description": "The duration in seconds after which an old sessionâ€™s TTL is updated that an old cookie is discarded.",
          "type": "number"
        },
        "cookie_domain": {
          "description": "The domain with which the cookie is intended to be exchanged.",
          "type": "string"
        },
        "cookie_httponly": {
          "default": true,
          "description": "Applies the `HttpOnly` tag so that the cookie is sent only to a server. See the\n[Restrict access to cookies docs on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Restrict_access_to_cookies).",
          "type": "boolean"
        },
        "cookie_idletime": {
          "description": "The cookie idle time (in seconds); if a cookie is not used for this time\nperiod, the session becomes invalid. This value is not set by default,\nmeaning idle time checks are disabled.",
          "type": "number"
        },
        "cookie_lifetime": {
          "default": 3600,
          "description": "The duration in seconds that the session will remain open.",
          "type": "number"
        },
        "cookie_name": {
          "default": "session",
          "description": "The name of the cookie.",
          "type": "string"
        },
        "cookie_path": {
          "default": "/",
          "description": "The resource in the host where the cookie is available.",
          "type": "string"
        },
        "cookie_renew": {
          "default": 600,
          "description": "The remaining duration in seconds of a session at which point the Plugin renews the session.",
          "type": "number"
        },
        "cookie_samesite": {
          "default": "Strict",
          "description": "Determines whether and how a cookie may be sent with cross-site requests. \n\n\n* `Strict`: The browser sends cookies only if the request originated from the website that set the cookie.\n* `Lax`: Same-site cookies are withheld on cross-domain subrequests, but are sent when a user navigates\nto the URL from an external site, for example, by following a link. \n* `None` or `off`: Disables the same-site attribute so that a cookie may be sent with cross-site requests. \n`None` requires the Secure attribute (`cookie_secure`) in latest browser versions. For more information, \nsee the [SameSite cookies docs on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite).",
          "enum": [
            "Lax",
            "None",
            "Strict",
            "off"
          ],
          "type": "string"
        },
        "cookie_secure": {
          "default": true,
          "description": "Applies the Secure directive so that the cookie may be sent to the server only with an encrypted\nrequest over the HTTPS protocol. See the\n[Restrict access to cookies docs on MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Restrict_access_to_cookies).",
          "type": "boolean"
        },
        "logout_methods": {
          "default": [
            "DELETE",
            "POST"
          ],
          "description": "The methods that may be used to end sessions: POST, DELETE, GET.",
          "items": {
            "enum": [
              "DELETE",
              "GET",
              "POST"
            ],
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        },
        "logout_post_arg": {
          "default": "session_logout",
          "description": "The POST argument passed to logout requests. Do not change this property.",
          "type": "string"
        },
        "logout_query_arg": {
          "default": "session_logout",
          "description": "The query argument passed to logout requests.",
          "type": "string"
        },
        "secret": {
          "default": "UnXKQHe8y4hyiLqpH0BX9pSz4blZuZvIFhg11Zv87dEe",
          "description": "The secret that is used in keyed HMAC generation.",
          "examples": [
            "opensesame"
          ],
          "type": "string"
        },
        "storage": {
          "default": "cookie",
          "description": "Determines where the session data is stored. `kong`: Stores encrypted session data into Kong's current database\nstrategy; the cookie will not contain any session data. `cookie`: Stores encrypted\nsession data within the cookie itself.",
          "enum": [
            "cookie",
            "kong"
          ],
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}