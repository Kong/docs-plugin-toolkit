{
  "properties": {
    "config": {
      "properties": {
        "consumer_tag": {
          "default": "consumer",
          "description": "String to be attached as tag of the consumer.",
          "type": "string"
        },
        "flush_timeout": {
          "description": "Optional time in seconds. If `queue_size` > 1, this is the max idle time before sending a log with less than `queue_size` records.",
          "type": "number"
        },
        "host": {
          "default": "localhost",
          "description": "A string representing a host name, such as example.com.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
          "type": "string"
        },
        "metrics": {
          "default": [
            {
              "consumer_identifier": "custom_id",
              "name": "kong_latency",
              "sample_rate": 1,
              "stat_type": "timer",
              "tags": [
                "app:kong"
              ]
            }
          ],
          "description": "List of metrics to be logged.",
          "items": {
            "properties": {
              "consumer_identifier": {
                "description": "Authenticated user detail",
                "enum": [
                  "consumer_id",
                  "custom_id",
                  "username"
                ],
                "type": "string"
              },
              "name": {
                "description": "Datadog metricâ€™s name",
                "enum": [
                  "kong_latency",
                  "latency",
                  "request_count",
                  "request_size",
                  "response_size",
                  "upstream_latency"
                ],
                "type": "string"
              },
              "sample_rate": {
                "description": "Sampling rate",
                "maximum": 1,
                "minimum": 0,
                "type": "number"
              },
              "stat_type": {
                "description": "Determines what sort of event the metric represents",
                "enum": [
                  "counter",
                  "distribution",
                  "gauge",
                  "histogram",
                  "meter",
                  "set",
                  "timer"
                ],
                "type": "string"
              },
              "tags": {
                "description": "List of tags",
                "items": {
                  "pattern": "^.*[^:]$",
                  "required": [],
                  "type": "string"
                },
                "type": "array"
              }
            },
            "required": [
              "name",
              "stat_type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "port": {
          "default": 8125,
          "description": "An integer representing a port number between 0 and 65535, inclusive.",
          "maximum": 65535,
          "minimum": 0,
          "type": "integer"
        },
        "prefix": {
          "default": "kong",
          "description": "String to be attached as a prefix to a metric's name.",
          "type": "string"
        },
        "queue": {
          "properties": {
            "concurrency_limit": {
              "default": 1,
              "description": "The number of of queue delivery timers. -1 indicates unlimited.",
              "enum": [
                -1,
                1
              ],
              "type": "integer"
            },
            "initial_retry_delay": {
              "default": 0.01,
              "description": "Time in seconds before the initial retry is made for a failing batch.",
              "maximum": 1000000,
              "minimum": 0.001,
              "type": "number"
            },
            "max_batch_size": {
              "default": 1,
              "description": "Maximum number of entries that can be processed at a time.",
              "maximum": 1000000,
              "minimum": 1,
              "type": "integer"
            },
            "max_bytes": {
              "description": "Maximum number of bytes that can be waiting on a queue, requires string content.",
              "type": "integer"
            },
            "max_coalescing_delay": {
              "default": 1,
              "description": "Maximum number of (fractional) seconds to elapse after the first entry was queued before the queue starts calling the handler.",
              "maximum": 3600,
              "minimum": 0,
              "type": "number"
            },
            "max_entries": {
              "default": 10000,
              "description": "Maximum number of entries that can be waiting on the queue.",
              "maximum": 1000000,
              "minimum": 1,
              "type": "integer"
            },
            "max_retry_delay": {
              "default": 60,
              "description": "Maximum time in seconds between retries, caps exponential backoff.",
              "maximum": 1000000,
              "minimum": 0.001,
              "type": "number"
            },
            "max_retry_time": {
              "default": 60,
              "description": "Time in seconds before the queue gives up calling a failed handler for a batch.",
              "type": "number"
            }
          },
          "required": [],
          "type": "object"
        },
        "queue_size": {
          "description": "Maximum number of log entries to be sent on each message to the upstream server.",
          "type": "integer"
        },
        "retry_count": {
          "description": "Number of times to retry when sending data to the upstream server.",
          "type": "integer"
        },
        "service_name_tag": {
          "default": "name",
          "description": "String to be attached as the name of the service.",
          "type": "string"
        },
        "status_tag": {
          "default": "status",
          "description": "String to be attached as the tag of the HTTP status.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing protocols.",
      "items": {
        "description": "A string representing a protocol, such as HTTP or HTTPS.",
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "tcp",
          "tls",
          "tls_passthrough",
          "udp",
          "ws",
          "wss"
        ],
        "required": [],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    }
  },
  "required": []
}