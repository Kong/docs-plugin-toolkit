{
  "properties": {
    "config": {
      "properties": {
        "auth_password": {
          "description": "The password to authenticate with, if the forward proxy is protected\nby basic authentication.",
          "examples": [
            "example_pass"
          ],
          "type": "string"
        },
        "auth_username": {
          "description": "The username to authenticate with, if the forward proxy is protected\nby basic authentication.",
          "examples": [
            "example_user"
          ],
          "type": "string"
        },
        "http_proxy_host": {
          "description": "The HTTP hostname or IP address of the forward proxy to which to connect.\n Required if `http_proxy_port` is set.\n\nAt least one of `http_proxy_host` or `https_proxy_host` must be specified.\n\nIf `http_proxy_host` isn't set, the plugin falls back to the value\nconfigured in `https_proxy_host`.",
          "examples": [
            "example.com"
          ],
          "type": "string"
        },
        "http_proxy_port": {
          "description": "The TCP port of the HTTP forward proxy to which to connect.\nRequired if `http_proxy_host` is set.\n\nAt least one of `http_proxy_port` or `https_proxy_port` must be specified.\n\nIf `http_proxy_port` isn't set, the plugin falls back to the value\nconfigured in `https_proxy_port`.",
          "examples": [
            80
          ],
          "maximum": 65535,
          "minimum": 0,
          "type": "integer"
        },
        "https_proxy_host": {
          "description": "The HTTPS hostname or IP address of the forward proxy to which to connect.\nRequired if `https_proxy_port` is set.\n\nAt least one of `http_proxy_host` or `https_proxy_host` must be specified.\n\nIf `https_proxy_host` isn't set, the plugin falls back to the value\nconfigured in `http_proxy_host`.",
          "type": "string"
        },
        "https_proxy_port": {
          "description": "The TCP port of the HTTPS forward proxy to which to connect.\nRequired if `https_proxy_host` is set.\n\nAt least one of `http_proxy_port` or `https_proxy_port` must be specified.\n\nIf `https_proxy_port` isn't set, the plugin falls back to the value\nconfigured in `http_proxy_port`.",
          "maximum": 65535,
          "minimum": 0,
          "type": "integer"
        },
        "https_verify": {
          "default": false,
          "description": "Whether the server certificate will be verified according to the CA certificates\nspecified in\n[lua_ssl_trusted_certificate](https://www.nginx.com/resources/wiki/modules/lua/#lua-ssl-trusted-certificate).",
          "examples": [
            false
          ],
          "type": "boolean"
        },
        "proxy_scheme": {
          "default": "http",
          "description": "The proxy scheme to use when connecting. Only `http` is supported.",
          "enum": [
            "http"
          ],
          "examples": [
            "http"
          ],
          "type": "string"
        }
      },
      "required": [

      ],
      "shorthand_fields": {
        "proxy_host": {
          "type": "string"
        },
        "proxy_port": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}