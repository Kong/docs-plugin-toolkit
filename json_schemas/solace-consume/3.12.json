{
  "properties": {
    "config": {
      "properties": {
        "flow": {
          "description": "The flow related configuration.",
          "properties": {
            "ack_mode": {
              "default": "CLIENT",
              "enum": [
                "AUTO",
                "CLIENT"
              ],
              "type": "string"
            },
            "binds": {
              "items": {
                "properties": {
                  "name": {
                    "description": "You can use $(uri_captures['<capture-identifier>'] in this field (replace `<capture-identifier>` with a real value, for example `$uri_captures[’queue’]` when the matched route has a path `~/(?<queue>[a-z]+)`)",
                    "type": "string"
                  },
                  "type": {
                    "default": "QUEUE",
                    "enum": [
                      "QUEUE"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "minLength": 1,
              "type": "array"
            },
            "functions": {
              "description": "The Lua functions that manipulates the message being received from Solace. The `message` variable can be used to access the current message content, and the function can return a new content.",
              "items": {
                "required": [],
                "type": "string"
              },
              "type": "array"
            },
            "max_unacked_messages": {
              "default": -1,
              "minimum": -2,
              "ne": 0,
              "type": "integer"
            },
            "properties": {
              "additionalProperties": true,
              "description": "Additional Solace flow properties (each setting needs to have `FLOW_` prefix).",
              "type": "object"
            },
            "selector": {
              "type": "string"
            },
            "wait_timeout": {
              "default": 50,
              "maximum": 5000,
              "minimum": 1,
              "type": "integer"
            },
            "window_size": {
              "default": 255,
              "maximum": 255,
              "minimum": 1,
              "type": "integer"
            }
          },
          "required": [
            "binds"
          ],
          "type": "object"
        },
        "mode": {
          "default": "polling",
          "description": "The mode of operation for the plugin.",
          "enum": [
            "auto",
            "polling",
            "server-sent-events",
            "websocket"
          ],
          "type": "string"
        },
        "polling": {
          "description": "The flow related configuration.",
          "properties": {
            "timeout": {
              "default": 0,
              "maximum": 300000,
              "minimum": 0,
              "type": "integer"
            }
          },
          "required": [],
          "type": "object"
        },
        "session": {
          "description": "Session related configuration.",
          "properties": {
            "authentication": {
              "description": "Session authentication related configuration.",
              "properties": {
                "access_token": {
                  "description": "The OAuth2 access token used with `OAUTH2` authentication scheme when connecting to an event broker.\nThis field is [encrypted](/gateway/keyring/).\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
                  "type": "string"
                },
                "access_token_header": {
                  "type": "string"
                },
                "id_token": {
                  "description": "The OpenID Connect ID token used with `OAUTH2` authentication scheme when connecting to an event broker.\nThis field is [encrypted](/gateway/keyring/).\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
                  "type": "string"
                },
                "id_token_header": {
                  "type": "string"
                },
                "password": {
                  "description": "The password used with `BASIC` authentication scheme when connecting to an event broker.\nThis field is [encrypted](/gateway/keyring/).\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
                  "maxLength": 128,
                  "type": "string"
                },
                "scheme": {
                  "default": "BASIC",
                  "description": "The client authentication scheme used when connection to an event broker.",
                  "enum": [
                    "BASIC",
                    "NONE",
                    "OAUTH2"
                  ],
                  "type": "string"
                },
                "username": {
                  "description": "The username used with `BASIC` authentication scheme when connecting to an event broker.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
                  "maxLength": 189,
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            },
            "calculate_message_expiry": {
              "default": true,
              "type": "boolean"
            },
            "connect_timeout": {
              "default": 3000,
              "description": "The timeout period (in milliseconds) for a connect operation to a given host (per host).",
              "maximum": 100000,
              "minimum": 100,
              "type": "integer"
            },
            "generate_rcv_timestamps": {
              "default": true,
              "type": "boolean"
            },
            "generate_send_timestamps": {
              "default": true,
              "type": "boolean"
            },
            "generate_sender_id": {
              "default": true,
              "type": "boolean"
            },
            "generate_sequence_number": {
              "default": true,
              "type": "boolean"
            },
            "host": {
              "description": "The IPv4 or IPv6 address or host name to connect to (see: https://docs.solace.com/API-Developer-Online-Ref-Documentation/c/index.html#host-entry).\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
              "type": "string"
            },
            "properties": {
              "additionalProperties": true,
              "description": "Additional Solace session properties (each setting needs to have `SESSION_` prefix).",
              "type": "object"
            },
            "ssl_validate_certificate": {
              "default": false,
              "description": "Indicates whether the API should validate server certificates with the trusted certificates.",
              "type": "boolean"
            },
            "vpn_name": {
              "description": "The name of the Message VPN to attempt to join when connecting to an event broker.",
              "maxLength": 32,
              "type": "string"
            }
          },
          "required": [
            "host"
          ],
          "type": "object"
        },
        "websocket": {
          "description": "The flow related configuration.",
          "properties": {
            "max_recv_len": {
              "default": 65536,
              "minimum": 0,
              "type": "integer"
            },
            "max_send_len": {
              "default": 65536,
              "minimum": 0,
              "type": "integer"
            },
            "timeout": {
              "default": 1000,
              "maximum": 60000,
              "minimum": 1,
              "type": "integer"
            }
          },
          "required": [],
          "type": "object"
        }
      },
      "required": [
        "flow",
        "session"
      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing HTTP protocols.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    }
  },
  "required": [
    "config"
  ]
}