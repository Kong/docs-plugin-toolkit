{
  "properties": {
    "config": {
      "properties": {
        "anonymous": {
          "default": "",
          "description": "An optional string (consumer UUID) value to use as an anonymous consumer if authentication fails. If empty (default), the request fails with an authentication failure `4xx`.",
          "minLength": 0,
          "type": "string"
        },
        "authorization_value": {
          "description": "The value to set as the `Authorization` header when querying the introspection endpoint. This depends on the OAuth 2.0 server, but usually is the `client_id` and `client_secret` as a Base64-encoded Basic Auth string (`Basic MG9hNWl...`).",
          "examples": [
            "Basic MG9hNWlpbjpPcGVuU2VzYW1l"
          ],
          "type": "string"
        },
        "consumer_by": {
          "default": "username",
          "description": "A string indicating whether to associate OAuth2 `username` or `client_id`\nwith the consumer's username. OAuth2 `username` is mapped to a consumer's\n`username` field, while an OAuth2 `client_id` maps to a consumer's\n`custom_id`.",
          "enum": [
            "client_id",
            "username"
          ],
          "examples": [
            "username"
          ],
          "type": "string"
        },
        "custom_claims_forward": {
          "default": [

          ],
          "description": "A list of custom claims to be forwarded from the introspection response\nto the upstream request. Claims are forwarded in headers with prefix\n`X-Credential-{claim-name}`.",
          "items": {
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        },
        "custom_introspection_headers": {
          "additionalProperties": true,
          "description": "A list of custom headers to be added in the introspection request.",
          "type": "object"
        },
        "hide_credentials": {
          "default": false,
          "description": "An optional boolean value telling the plugin to hide the credential to the upstream API server. It will be removed by Kong before proxying the request.",
          "type": "boolean"
        },
        "introspect_request": {
          "default": false,
          "description": "A boolean indicating whether to forward information about the current\ndownstream request to the introspect endpoint. If true, headers\n`X-Request-Path` and `X-Request-Http-Method` will be inserted into the\nintrospect request.",
          "type": "boolean"
        },
        "introspection_url": {
          "description": "The full URL to the third-party introspection endpoint.\n\nIf the introspection endpoint is `https`, [`lua_ssl_trusted_certificate`](/gateway/latest/reference/configuration/#lua_ssl_trusted_certificate)\nmust be set in `kong.conf` to ensure the plugin can connect\nto the endpoint. The CA bundle file location depends on your OS. See the\n[configuration reference](/gateway/latest/reference/configuration/#lua_ssl_trusted_certificate) for a list.\n\nStarting with Kong v2.2, users can set `lua_ssl_trusted_certificate=system`\nto automatically use the CA bundle from the OS.",
          "examples": [
            "https://example-url.com"
          ],
          "type": "string"
        },
        "keepalive": {
          "default": 60000,
          "description": "An optional value in milliseconds that defines how long an idle connection lives before being closed.",
          "type": "integer"
        },
        "run_on_preflight": {
          "default": true,
          "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests will always be allowed.",
          "type": "boolean"
        },
        "timeout": {
          "default": 10000,
          "description": "An optional timeout in milliseconds when sending data to the upstream server.",
          "type": "integer"
        },
        "token_type_hint": {
          "description": "The `token_type_hint` value to associate to introspection requests.",
          "type": "string"
        },
        "ttl": {
          "default": 30,
          "description": "The TTL in seconds for the introspection response. Set to 0 to disable the expiration.",
          "type": "number"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}