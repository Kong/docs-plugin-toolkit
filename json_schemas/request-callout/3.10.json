{
  "properties": {
    "config": {
      "properties": {
        "cache": {
          "properties": {
            "cache_ttl": {
              "default": 300,
              "description": "TTL in seconds of cache entities.",
              "minimum": 0,
              "type": "integer"
            },
            "memory": {
              "properties": {
                "dictionary_name": {
                  "default": "kong_db_cache",
                  "description": "The name of the shared dictionary in which to hold cache entities when the memory strategy is selected. Note that this dictionary currently must be defined manually in the Kong Nginx template.",
                  "type": "string"
                }
              },
              "required": [

              ],
              "type": "object"
            },
            "redis": {
              "properties": {
                "cluster_max_redirections": {
                  "default": 5,
                  "description": "Maximum retry attempts for redirection.",
                  "type": "integer"
                },
                "cluster_nodes": {
                  "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
                  "items": {
                    "properties": {
                      "ip": {
                        "default": "127.0.0.1",
                        "description": "A string representing a host name, such as example.com.",
                        "type": "string"
                      },
                      "port": {
                        "default": 6379,
                        "description": "An integer representing a port number between 0 and 65535, inclusive.",
                        "maximum": 65535,
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  },
                  "minLength": 1,
                  "type": "array"
                },
                "connect_timeout": {
                  "default": 2000,
                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
                  "maximum": 2147483646,
                  "minimum": 0,
                  "type": "integer"
                },
                "connection_is_proxied": {
                  "default": false,
                  "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address.",
                  "type": "boolean"
                },
                "database": {
                  "default": 0,
                  "description": "Database to use for the Redis connection when using the `redis` strategy",
                  "type": "integer"
                },
                "host": {
                  "default": "127.0.0.1",
                  "description": "A string representing a host name, such as example.com.",
                  "type": "string"
                },
                "keepalive_backlog": {
                  "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
                  "maximum": 2147483646,
                  "minimum": 0,
                  "type": "integer"
                },
                "keepalive_pool_size": {
                  "default": 256,
                  "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.",
                  "maximum": 2147483646,
                  "minimum": 1,
                  "type": "integer"
                },
                "password": {
                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                  "type": "string"
                },
                "port": {
                  "default": 6379,
                  "description": "An integer representing a port number between 0 and 65535, inclusive.",
                  "maximum": 65535,
                  "minimum": 0,
                  "type": "integer"
                },
                "read_timeout": {
                  "default": 2000,
                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
                  "maximum": 2147483646,
                  "minimum": 0,
                  "type": "integer"
                },
                "send_timeout": {
                  "default": 2000,
                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
                  "maximum": 2147483646,
                  "minimum": 0,
                  "type": "integer"
                },
                "sentinel_master": {
                  "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
                  "type": "string"
                },
                "sentinel_nodes": {
                  "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
                  "items": {
                    "properties": {
                      "host": {
                        "default": "127.0.0.1",
                        "description": "A string representing a host name, such as example.com.",
                        "type": "string"
                      },
                      "port": {
                        "default": 6379,
                        "description": "An integer representing a port number between 0 and 65535, inclusive.",
                        "maximum": 65535,
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  },
                  "minLength": 1,
                  "type": "array"
                },
                "sentinel_password": {
                  "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.",
                  "type": "string"
                },
                "sentinel_role": {
                  "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel.",
                  "enum": [
                    "any",
                    "master",
                    "slave"
                  ],
                  "type": "string"
                },
                "sentinel_username": {
                  "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.",
                  "type": "string"
                },
                "server_name": {
                  "description": "A string representing an SNI (server name indication) value for TLS.",
                  "type": "string"
                },
                "ssl": {
                  "default": false,
                  "description": "If set to true, uses SSL to connect to Redis.",
                  "type": "boolean"
                },
                "ssl_verify": {
                  "default": false,
                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly.",
                  "type": "boolean"
                },
                "username": {
                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.",
                  "type": "string"
                }
              },
              "required": [

              ],
              "shorthand_fields": {
                "cluster_addresses": {
                  "items": {
                    "type": "string"
                  },
                  "minLength": 1,
                  "type": "array"
                },
                "sentinel_addresses": {
                  "items": {
                    "type": "string"
                  },
                  "minLength": 1,
                  "type": "array"
                },
                "timeout": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "strategy": {
              "default": "off",
              "enum": [
                "memory",
                "off",
                "redis"
              ],
              "type": "string"
            }
          },
          "required": [

          ],
          "type": "object"
        },
        "callouts": {
          "items": {
            "properties": {
              "cache": {
                "properties": {
                  "bypass": {
                    "default": false,
                    "type": "boolean"
                  }
                },
                "required": [

                ],
                "type": "object"
              },
              "depends_on": {
                "default": [

                ],
                "items": {
                  "required": [

                  ],
                  "type": "string"
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "request": {
                "properties": {
                  "body": {
                    "properties": {
                      "custom": {
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "decode": {
                        "default": false,
                        "type": "boolean"
                      },
                      "forward": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  },
                  "by_lua": {
                    "type": "string"
                  },
                  "error": {
                    "properties": {
                      "error_response_code": {
                        "default": 400,
                        "type": "integer"
                      },
                      "error_response_msg": {
                        "default": "service callout error",
                        "type": "string"
                      },
                      "http_statuses": {
                        "items": {
                          "maximum": 999,
                          "minimum": 100,
                          "required": [

                          ],
                          "type": "integer"
                        },
                        "type": "array"
                      },
                      "on_error": {
                        "default": "fail",
                        "enum": [
                          "continue",
                          "fail",
                          "retry"
                        ],
                        "type": "string"
                      },
                      "retries": {
                        "default": 2,
                        "type": "integer"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  },
                  "headers": {
                    "properties": {
                      "custom": {
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "forward": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  },
                  "http_opts": {
                    "properties": {
                      "proxy": {
                        "properties": {
                          "auth_password": {
                            "type": "string"
                          },
                          "auth_username": {
                            "type": "string"
                          },
                          "http_proxy": {
                            "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                            "type": "string"
                          },
                          "https_proxy": {
                            "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                            "type": "string"
                          }
                        },
                        "required": [

                        ],
                        "type": "object"
                      },
                      "ssl_server_name": {
                        "type": "string"
                      },
                      "ssl_verify": {
                        "default": false,
                        "type": "boolean"
                      },
                      "timeouts": {
                        "properties": {
                          "connect": {
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
                            "maximum": 2147483646,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "read": {
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
                            "maximum": 2147483646,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "write": {
                            "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
                            "maximum": 2147483646,
                            "minimum": 0,
                            "type": "integer"
                          }
                        },
                        "required": [

                        ],
                        "type": "object"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  },
                  "method": {
                    "default": "GET",
                    "description": "A string representing an HTTP method, such as GET, POST, PUT, or DELETE. The string must contain only uppercase letters.",
                    "pattern": "^%u+$",
                    "type": "string"
                  },
                  "query": {
                    "properties": {
                      "custom": {
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "forward": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  },
                  "url": {
                    "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
                    "type": "string"
                  }
                },
                "required": [
                  "body",
                  "error",
                  "headers",
                  "http_opts",
                  "query",
                  "url"
                ],
                "type": "object"
              },
              "response": {
                "properties": {
                  "body": {
                    "properties": {
                      "decode": {
                        "default": false,
                        "type": "boolean"
                      },
                      "store": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  },
                  "by_lua": {
                    "type": "string"
                  },
                  "headers": {
                    "properties": {
                      "store": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "required": [

                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "body",
                  "headers"
                ],
                "type": "object"
              }
            },
            "required": [
              "cache",
              "name",
              "request",
              "response"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "upstream": {
          "properties": {
            "body": {
              "properties": {
                "custom": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "decode": {
                  "default": true,
                  "type": "boolean"
                },
                "forward": {
                  "default": true,
                  "type": "boolean"
                }
              },
              "required": [

              ],
              "type": "object"
            },
            "by_lua": {
              "type": "string"
            },
            "headers": {
              "properties": {
                "custom": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "forward": {
                  "default": true,
                  "type": "boolean"
                }
              },
              "required": [

              ],
              "type": "object"
            },
            "query": {
              "properties": {
                "custom": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "forward": {
                  "default": true,
                  "type": "boolean"
                }
              },
              "required": [

              ],
              "type": "object"
            }
          },
          "required": [

          ],
          "type": "object"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing HTTP protocols.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}