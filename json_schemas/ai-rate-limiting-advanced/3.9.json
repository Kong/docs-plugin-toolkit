{
  "properties": {
    "config": {
      "properties": {
        "dictionary_name": {
          "default": "kong_rate_limiting_counters",
          "description": "The shared dictionary where counters are stored. When the plugin is configured to synchronize counter data externally (that is `config.strategy` is `cluster` or `redis` and `config.sync_rate` isn't `-1`), this dictionary serves as a buffer to populate counters in the data store on each synchronization cycle.",
          "type": "string"
        },
        "disable_penalty": {
          "default": false,
          "description": "If set to `true`, this doesn't count denied requests (status = `429`). If set to `false`, all requests, including denied ones, are counted. This parameter only affects the `sliding` window_type and the request prompt provider.",
          "type": "boolean"
        },
        "error_code": {
          "default": 429,
          "description": "Set a custom error code to return when the rate limit is exceeded.",
          "minimum": 0,
          "type": "number"
        },
        "error_hide_providers": {
          "default": false,
          "description": "Optionally hide informative response that would otherwise provide information about the provider in the error message.",
          "type": "boolean"
        },
        "error_message": {
          "default": "AI token rate limit exceeded for provider(s): ",
          "description": "Set a custom error message to return when the rate limit is exceeded.",
          "type": "string"
        },
        "header_name": {
          "description": "A string representing an HTTP header name.",
          "type": "string"
        },
        "hide_client_headers": {
          "default": false,
          "description": "Optionally hide informative response headers that would otherwise provide information about the current status of limits and counters.",
          "type": "boolean"
        },
        "identifier": {
          "default": "consumer",
          "description": "The type of identifier used to generate the rate limit key. Defines the scope used to increment the rate limiting counters. Can be `ip`, `credential`, `consumer`, `service`, `header`, `path` or `consumer-group`.",
          "enum": [
            "consumer",
            "consumer-group",
            "credential",
            "header",
            "ip",
            "path",
            "service"
          ],
          "type": "string"
        },
        "llm_providers": {
          "description": "The provider config. Takes an array of `name`, `limit` and `window size` values.",
          "items": {
            "properties": {
              "limit": {
                "description": "The limit applies to the LLM provider within the defined window size. It used the query cost from the tokens to increment the counter.",
                "type": "number"
              },
              "name": {
                "description": "The LLM provider to which the rate limit applies.",
                "enum": [
                  "anthropic",
                  "azure",
                  "bedrock",
                  "cohere",
                  "gemini",
                  "huggingface",
                  "llama2",
                  "mistral",
                  "openai",
                  "requestPrompt"
                ],
                "type": "string"
              },
              "window_size": {
                "description": "The window size to apply a limit (defined in seconds).",
                "type": "number"
              }
            },
            "required": [
              "limit",
              "name",
              "window_size"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "path": {
          "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
          "type": "string"
        },
        "redis": {
          "properties": {
            "cluster_max_redirections": {
              "default": 5,
              "description": "Maximum retry attempts for redirection.",
              "type": "integer"
            },
            "cluster_nodes": {
              "description": "Cluster addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Cluster. The minimum length of the array is 1 element.",
              "items": {
                "properties": {
                  "ip": {
                    "default": "127.0.0.1",
                    "description": "A string representing a host name, such as example.com.",
                    "type": "string"
                  },
                  "port": {
                    "default": 6379,
                    "description": "An integer representing a port number between 0 and 65535, inclusive.",
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "required": [

                ],
                "type": "object"
              },
              "minLength": 1,
              "type": "array"
            },
            "connect_timeout": {
              "default": 2000,
              "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
              "maximum": 2147483646,
              "minimum": 0,
              "type": "integer"
            },
            "connection_is_proxied": {
              "default": false,
              "description": "If the connection to Redis is proxied (e.g. Envoy), set it `true`. Set the `host` and `port` to point to the proxy address.",
              "type": "boolean"
            },
            "database": {
              "default": 0,
              "description": "Database to use for the Redis connection when using the `redis` strategy",
              "type": "integer"
            },
            "host": {
              "default": "127.0.0.1",
              "description": "A string representing a host name, such as example.com.",
              "type": "string"
            },
            "keepalive_backlog": {
              "description": "Limits the total number of opened connections for a pool. If the connection pool is full, connection queues above the limit go into the backlog queue. If the backlog queue is full, subsequent connect operations fail and return `nil`. Queued operations (subject to set timeouts) resume once the number of connections in the pool is less than `keepalive_pool_size`. If latency is high or throughput is low, try increasing this value. Empirically, this value is larger than `keepalive_pool_size`.",
              "maximum": 2147483646,
              "minimum": 0,
              "type": "integer"
            },
            "keepalive_pool_size": {
              "default": 256,
              "description": "The size limit for every cosocket connection pool associated with every remote server, per worker process. If neither `keepalive_pool_size` nor `keepalive_backlog` is specified, no pool is created. If `keepalive_pool_size` isn't specified but `keepalive_backlog` is specified, then the pool uses the default value. Try to increase (e.g. 512) this value if latency is high or throughput is low.",
              "maximum": 2147483646,
              "minimum": 1,
              "type": "integer"
            },
            "password": {
              "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.\nThis field is [encrypted](/gateway/keyring/).\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
              "type": "string"
            },
            "port": {
              "default": 6379,
              "description": "An integer representing a port number between 0 and 65535, inclusive.",
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            "read_timeout": {
              "default": 2000,
              "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
              "maximum": 2147483646,
              "minimum": 0,
              "type": "integer"
            },
            "send_timeout": {
              "default": 2000,
              "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
              "maximum": 2147483646,
              "minimum": 0,
              "type": "integer"
            },
            "sentinel_master": {
              "description": "Sentinel master to use for Redis connections. Defining this value implies using Redis Sentinel.",
              "type": "string"
            },
            "sentinel_nodes": {
              "description": "Sentinel node addresses to use for Redis connections when the `redis` strategy is defined. Defining this field implies using a Redis Sentinel. The minimum length of the array is 1 element.",
              "items": {
                "properties": {
                  "host": {
                    "default": "127.0.0.1",
                    "description": "A string representing a host name, such as example.com.",
                    "type": "string"
                  },
                  "port": {
                    "default": 6379,
                    "description": "An integer representing a port number between 0 and 65535, inclusive.",
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "required": [

                ],
                "type": "object"
              },
              "minLength": 1,
              "type": "array"
            },
            "sentinel_password": {
              "description": "Sentinel password to authenticate with a Redis Sentinel instance. If undefined, no AUTH commands are sent to Redis Sentinels.\nThis field is [encrypted](/gateway/keyring/).\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
              "type": "string"
            },
            "sentinel_role": {
              "description": "Sentinel role to use for Redis connections when the `redis` strategy is defined. Defining this value implies using Redis Sentinel.",
              "enum": [
                "any",
                "master",
                "slave"
              ],
              "type": "string"
            },
            "sentinel_username": {
              "description": "Sentinel username to authenticate with a Redis Sentinel instance. If undefined, ACL authentication won't be performed. This requires Redis v6.2.0+.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
              "type": "string"
            },
            "server_name": {
              "description": "A string representing an SNI (server name indication) value for TLS.",
              "type": "string"
            },
            "ssl": {
              "default": false,
              "description": "If set to true, uses SSL to connect to Redis.",
              "type": "boolean"
            },
            "ssl_verify": {
              "default": false,
              "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly.",
              "type": "boolean"
            },
            "username": {
              "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
              "type": "string"
            }
          },
          "required": [

          ],
          "shorthand_fields": {
            "cluster_addresses": {
              "items": {
                "type": "string"
              },
              "minLength": 1,
              "type": "array"
            },
            "sentinel_addresses": {
              "items": {
                "type": "string"
              },
              "minLength": 1,
              "type": "array"
            },
            "timeout": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "request_prompt_count_function": {
          "description": "If defined, it use custom function to count requests for the request prompt provider",
          "type": "string"
        },
        "retry_after_jitter_max": {
          "default": 0,
          "description": "The upper bound of a jitter (random delay) in seconds to be added to the `Retry-After` header of denied requests (status = `429`) in order to prevent all the clients from coming back at the same time. The lower bound of the jitter is `0`; in this case, the `Retry-After` header is equal to the `RateLimit-Reset` header.",
          "type": "number"
        },
        "strategy": {
          "default": "local",
          "description": "The rate-limiting strategy to use for retrieving and incrementing the limits. Available values are: `local` and `cluster`.",
          "enum": [
            "cluster",
            "local",
            "redis"
          ],
          "type": "string"
        },
        "sync_rate": {
          "description": "How often to sync counter data to the central data store. A value of 0 results in synchronous behavior; a value of -1 ignores sync behavior entirely and only stores counters in node memory. A value greater than 0 will sync the counters in the specified number of seconds. The minimum allowed interval is 0.02 seconds (20ms).",
          "type": "number"
        },
        "tokens_count_strategy": {
          "default": "total_tokens",
          "description": "What tokens to use for cost calculation. Available values are: `total_tokens` `prompt_tokens`, `completion_tokens` or `cost`.",
          "enum": [
            "completion_tokens",
            "cost",
            "prompt_tokens",
            "total_tokens"
          ],
          "type": "string"
        },
        "window_type": {
          "default": "sliding",
          "description": "Sets the time window type to either `sliding` (default) or `fixed`. Sliding windows apply the rate limiting logic while taking into account previous hit rates (from the window that immediately precedes the current) using a dynamic weight. Fixed windows consist of buckets that are statically assigned to a definitive time range, each request is mapped to only one fixed window based on its timestamp and will affect only that window's counters.",
          "enum": [
            "fixed",
            "sliding"
          ],
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing HTTP protocols.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}