{
  "properties": {
    "config": {
      "properties": {
        "canary_by_header_name": {
          "description": "A string representing an HTTP header name.",
          "type": "string"
        },
        "duration": {
          "default": 3600,
          "description": "The duration of the canary release in seconds.",
          "minimum": 0,
          "type": "number"
        },
        "groups": {
          "description": "The groups allowed to access the canary release.",
          "items": {
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        },
        "hash": {
          "default": "consumer",
          "description": "Hash algorithm to be used for canary release.\n\n* `consumer`: The hash will be based on the consumer.\n* `ip`: The hash will be based on the client IP address.\n* `none`: No hash will be applied.\n* `allow`: Allows the specified groups to access the canary release.\n* `deny`: Denies the specified groups from accessing the canary release.\n* `header`: The hash will be based on the specified header value.",
          "enum": [
            "allow",
            "consumer",
            "deny",
            "header",
            "ip",
            "none"
          ],
          "type": "string"
        },
        "hash_header": {
          "description": "A string representing an HTTP header name.",
          "type": "string"
        },
        "percentage": {
          "description": "The percentage of traffic to be routed to the canary release.",
          "maximum": 100,
          "minimum": 0,
          "type": "number"
        },
        "start": {
          "description": "Future time in seconds since epoch, when the canary release will start. Ignored when `percentage` is set, or when using `allow` or `deny` in `hash`.",
          "type": "number"
        },
        "steps": {
          "default": 1000,
          "description": "The number of steps for the canary release.",
          "minimum": 1,
          "type": "number"
        },
        "upstream_fallback": {
          "default": false,
          "description": "Specifies whether to fallback to the upstream server if the canary release fails.",
          "type": "boolean"
        },
        "upstream_host": {
          "description": "A string representing a host name, such as example.com.",
          "type": "string"
        },
        "upstream_port": {
          "description": "An integer representing a port number between 0 and 65535, inclusive.",
          "maximum": 65535,
          "minimum": 0,
          "type": "integer"
        },
        "upstream_uri": {
          "description": "The URI of the upstream server to be used for the canary release.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [

      ],
      "shorthand_fields": {
        "hash": {
          "description": "Hash algorithm to be used for canary release. `whitelist` is deprecated. Use `allow` instead `blacklist` is deprecated. Use `deny` instead.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing HTTP protocols.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}