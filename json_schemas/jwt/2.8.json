{
  "properties": {
    "config": {
      "properties": {
        "anonymous": {
          "description": "An optional string (consumer UUID) value to use as an anonymous consumer if authentication fails.\nIf empty (default), the request will fail with an authentication failure `4xx`. Note that this value\nmust refer to the consumer `id` attribute that is internal to Kong Gateway, and **not** its `custom_id`.",
          "type": "string"
        },
        "claims_to_verify": {
          "description": "A list of registered claims (according to [RFC 7519](https://tools.ietf.org/html/rfc7519)) that Kong can verify as well. Accepted values: one of `exp` or `nbf`.",
          "items": {
            "enum": [
              "exp",
              "nbf"
            ],
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        },
        "cookie_names": {
          "default": [

          ],
          "description": "A list of cookie names that Kong will inspect to retrieve JWTs.",
          "items": {
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        },
        "header_names": {
          "default": [
            "authorization"
          ],
          "description": "A list of HTTP header names that Kong will inspect to retrieve JWTs.",
          "items": {
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        },
        "key_claim_name": {
          "default": "iss",
          "description": "The name of the claim in which the `key` identifying the secret **must** be passed. Starting with version `0.13.1`, the plugin will attempt to read this claim from the JWT payload and the header, in that order.",
          "type": "string"
        },
        "maximum_expiration": {
          "default": 0,
          "description": "A value between 0 and 31536000 (365 days) limiting the lifetime of the JWT to `maximum_expiration` seconds in the future. Any JWT that has a longer lifetime is rejected (HTTP 403). If this value is specified, `exp` must be specified as well in the `claims_to_verify` property. The default value of `0` represents an indefinite period. Potential clock skew should be considered when configuring this setting.",
          "maximum": 31536000,
          "minimum": 0,
          "type": "number"
        },
        "run_on_preflight": {
          "default": true,
          "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests will always be allowed.",
          "type": "boolean"
        },
        "secret_is_base64": {
          "default": false,
          "description": "If true, the plugin assumes the credential's `secret` to be base64 encoded. You will need to create a base64-encoded secret for your Consumer, and sign your JWT with the original secret.",
          "type": "boolean"
        },
        "uri_param_names": {
          "default": [
            "jwt"
          ],
          "description": "A list of querystring parameters that Kong will inspect to retrieve JWTs.",
          "examples": [
            [
              "paramName_2.2.x"
            ]
          ],
          "items": {
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}