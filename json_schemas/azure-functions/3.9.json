{
  "properties": {
    "config": {
      "properties": {
        "apikey": {
          "description": "The apikey to access the Azure resources. If provided, it is injected as the `x-functions-key` header.",
          "type": "string"
        },
        "appname": {
          "description": "The Azure app name.",
          "type": "string"
        },
        "clientid": {
          "description": "The `clientid` to access the Azure resources. If provided, it is injected as the `x-functions-clientid` header.",
          "type": "string"
        },
        "functionname": {
          "description": "Name of the Azure function to invoke.",
          "type": "string"
        },
        "hostdomain": {
          "default": "azurewebsites.net",
          "description": "The domain where the function resides.",
          "type": "string"
        },
        "https": {
          "default": true,
          "description": "Use of HTTPS to connect with the Azure Functions server.",
          "type": "boolean"
        },
        "https_verify": {
          "default": false,
          "description": "Set to `true` to authenticate the Azure Functions server.",
          "type": "boolean"
        },
        "keepalive": {
          "default": 60000,
          "description": "Time in milliseconds during which an idle connection to the Azure Functions server lives before being closed.",
          "type": "number"
        },
        "routeprefix": {
          "default": "api",
          "description": "Route prefix to use.",
          "type": "string"
        },
        "timeout": {
          "default": 600000,
          "description": "Timeout in milliseconds before closing a connection to the Azure Functions server.",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing protocols.",
      "items": {
        "description": "A string representing a protocol, such as HTTP or HTTPS.",
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "tcp",
          "tls",
          "tls_passthrough",
          "udp",
          "ws",
          "wss"
        ],
        "required": [],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    }
  },
  "required": []
}