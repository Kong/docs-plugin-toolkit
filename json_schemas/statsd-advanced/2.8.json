{
  "properties": {
    "config": {
      "properties": {
        "allow_status_codes": {
          "description": "List of status code ranges that are allowed to be logged in metrics.",
          "examples": [
            [
              "200-205",
              "400-499"
            ]
          ],
          "items": {
            "pattern": "^[0-9]+-[0-9]+$",
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        },
        "host": {
          "default": "localhost",
          "description": "The IP address or hostname of the StatsD server.",
          "examples": [
            "127.0.0.1"
          ],
          "type": "string"
        },
        "hostname_in_prefix": {
          "default": false,
          "description": "Include the `hostname` in the `prefix` for each metric name.",
          "type": "boolean"
        },
        "metrics": {
          "default": [
            {
              "consumer_identifier": "custom_id",
              "name": "cache_datastore_misses_total",
              "sample_rate": 1,
              "service_identifier": "service_name_or_host",
              "stat_type": "counter",
              "workspace_identifier": "workspace_id"
            }
          ],
          "description": "List of Metrics to be logged. Available values are described under [Metrics](#metrics).",
          "items": {
            "properties": {
              "consumer_identifier": {
                "enum": [
                  "consumer_id",
                  "custom_id",
                  "username"
                ],
                "type": "string"
              },
              "name": {
                "enum": [
                  "cache_datastore_hits_total",
                  "cache_datastore_misses_total",
                  "kong_latency",
                  "latency",
                  "request_count",
                  "request_per_user",
                  "request_size",
                  "response_size",
                  "shdict_usage",
                  "status_count",
                  "status_count_per_user",
                  "status_count_per_user_per_route",
                  "status_count_per_workspace",
                  "unique_users",
                  "upstream_latency"
                ],
                "type": "string"
              },
              "sample_rate": {
                "minimum": 0,
                "type": "number"
              },
              "service_identifier": {
                "enum": [
                  "service_host",
                  "service_id",
                  "service_name",
                  "service_name_or_host"
                ],
                "type": "string"
              },
              "stat_type": {
                "enum": [
                  "counter",
                  "gauge",
                  "histogram",
                  "meter",
                  "set",
                  "timer"
                ],
                "type": "string"
              },
              "workspace_identifier": {
                "enum": [
                  "workspace_id",
                  "workspace_name"
                ],
                "type": "string"
              }
            },
            "required": [
              "name",
              "stat_type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "port": {
          "default": 8125,
          "description": "The port of the StatsD server.",
          "examples": [
            8125
          ],
          "maximum": 65535,
          "minimum": 0,
          "type": "integer"
        },
        "prefix": {
          "default": "kong",
          "description": "String to prefix to each metric's name.",
          "type": "string"
        },
        "udp_packet_size": {
          "default": 0,
          "description": "Combine UDP packet up to the size configured. If zero (0), don't combine the\nUDP packet. Must be a number between 0 and 65507 (inclusive).",
          "maximum": 65507,
          "minimum": 0,
          "type": "number"
        },
        "use_tcp": {
          "default": false,
          "description": "Use TCP instead of UDP.",
          "type": "boolean"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}