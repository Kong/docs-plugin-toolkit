{
  "properties": {
    "config": {
      "properties": {
        "authentication": {
          "properties": {
            "mechanism": {
              "description": "The SASL authentication mechanism.\n\nSupported options: `PLAIN` or `SCRAM-SHA-256`.",
              "enum": [
                "PLAIN",
                "SCRAM-SHA-256",
                "SCRAM-SHA-512"
              ],
              "type": "string"
            },
            "password": {
              "description": "Password for SASL authentication.",
              "type": "string"
            },
            "strategy": {
              "description": "The authentication strategy for the plugin, the only option for the value is `sasl`.",
              "enum": [
                "sasl"
              ],
              "type": "string"
            },
            "tokenauth": {
              "description": "Enable this to indicate `DelegationToken` authentication",
              "type": "boolean"
            },
            "user": {
              "description": "Username for SASL authentication.",
              "type": "string"
            }
          },
          "required": [

          ],
          "type": "object"
        },
        "bootstrap_servers": {
          "description": "Set of bootstrap brokers in a `{host: host, port: port}` list format.",
          "items": {
            "properties": {
              "host": {
                "type": "string"
              },
              "port": {
                "maximum": 65535,
                "minimum": 0,
                "type": "integer"
              }
            },
            "required": [
              "host",
              "port"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "cluster_name": {
          "description": "An identifier for the Kafka cluster. By default, this field generates a\nrandom string. You can also set your own custom cluster identifier.\n\nIf more than one Kafka plugin is configured without a `cluster_name`\n(that is, if the default autogenerated value is removed),\nthese plugins will use the same producer, and by extension, the same\ncluster. Logs will be sent to the leader of the cluster.",
          "type": "string"
        },
        "keepalive": {
          "default": 60000,
          "type": "integer"
        },
        "keepalive_enabled": {
          "default": false,
          "type": "boolean"
        },
        "producer_async": {
          "default": true,
          "description": "Flag to enable asynchronous mode.",
          "type": "boolean"
        },
        "producer_async_buffering_limits_messages_in_memory": {
          "default": 50000,
          "description": "Maximum number of messages that can be buffered in memory in asynchronous mode.",
          "type": "integer"
        },
        "producer_async_flush_timeout": {
          "default": 1000,
          "description": "Maximum time interval in milliseconds between buffer flushes in asynchronous mode.",
          "type": "integer"
        },
        "producer_request_acks": {
          "default": 1,
          "description": "The number of acknowledgments the producer requires the leader to have received before\nconsidering a request complete. Allowed values: 0 for no acknowledgments; 1 for only the\nleader; and -1 for the full ISR (In-Sync Replica set).",
          "enum": [
            -1,
            0,
            1
          ],
          "type": "integer"
        },
        "producer_request_limits_bytes_per_request": {
          "default": 1048576,
          "description": "Maximum size of a Produce request in bytes.",
          "type": "integer"
        },
        "producer_request_limits_messages_per_request": {
          "default": 200,
          "description": "Maximum number of messages to include into a single Produce request.",
          "type": "integer"
        },
        "producer_request_retries_backoff_timeout": {
          "default": 100,
          "description": "Backoff interval between retry attempts in milliseconds.",
          "type": "integer"
        },
        "producer_request_retries_max_attempts": {
          "default": 10,
          "description": "Maximum number of retry attempts per single Produce request.",
          "type": "integer"
        },
        "producer_request_timeout": {
          "default": 2000,
          "description": "Time to wait for a Produce response in milliseconds",
          "type": "integer"
        },
        "security": {
          "properties": {
            "certificate_id": {
              "description": "UUID of certificate entity for mTLS authentication.",
              "type": "string",
              "uuid": true
            },
            "ssl": {
              "description": "Enables TLS.",
              "type": "boolean"
            }
          },
          "required": [

          ],
          "type": "object"
        },
        "timeout": {
          "default": 10000,
          "description": "Socket timeout in milliseconds.",
          "type": "integer"
        },
        "topic": {
          "description": "The Kafka topic to publish to.",
          "examples": [
            "TOPIC"
          ],
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}