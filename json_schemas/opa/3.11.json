{
  "properties": {
    "config": {
      "properties": {
        "include_body_in_opa_input": {
          "default": false,
          "type": "boolean"
        },
        "include_consumer_in_opa_input": {
          "default": false,
          "description": "If set to true, the Kong Gateway Consumer object in use for the current request (if any) is included as input to OPA.",
          "type": "boolean"
        },
        "include_parsed_json_body_in_opa_input": {
          "default": false,
          "description": "If set to true and the `Content-Type` header of the current request is `application/json`, the request body will be JSON decoded and the decoded struct is included as input to OPA.",
          "type": "boolean"
        },
        "include_route_in_opa_input": {
          "default": false,
          "description": "If set to true, the Kong Gateway Route object in use for the current request is included as input to OPA.",
          "type": "boolean"
        },
        "include_service_in_opa_input": {
          "default": false,
          "description": "If set to true, the Kong Gateway Service object in use for the current request is included as input to OPA.",
          "type": "boolean"
        },
        "include_uri_captures_in_opa_input": {
          "default": false,
          "description": "If set to true, the regex capture groups captured on the Kong Gateway Route's path field in the current request (if any) are included as input to OPA.",
          "type": "boolean"
        },
        "opa_host": {
          "default": "localhost",
          "description": "A string representing a host name, such as example.com.",
          "type": "string"
        },
        "opa_path": {
          "description": "A string representing a URL path, such as /path/to/resource. Must start with a forward slash (/) and must not contain empty segments (i.e., two consecutive forward slashes).",
          "type": "string"
        },
        "opa_port": {
          "default": 8181,
          "description": "An integer representing a port number between 0 and 65535, inclusive.",
          "maximum": 65535,
          "minimum": 0,
          "type": "integer"
        },
        "opa_protocol": {
          "default": "http",
          "description": "The protocol to use when talking to Open Policy Agent (OPA) server. Allowed protocols are `http` and `https`.",
          "enum": [
            "http",
            "https"
          ],
          "type": "string"
        },
        "ssl_verify": {
          "default": true,
          "description": "If set to true, the OPA certificate will be verified according to the CA certificates specified in lua_ssl_trusted_certificate.",
          "type": "boolean"
        }
      },
      "required": [
        "opa_path"
      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing HTTP protocols.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    }
  },
  "required": [
    "config"
  ]
}