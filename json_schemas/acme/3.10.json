{
  "properties": {
    "config": {
      "properties": {
        "account_email": {
          "description": "The account identifier. Can be reused in a different plugin instance.",
          "pattern": "[a-zA-Z0-9]*[!-/:-@[-`{-~]*@+[a-zA-Z0-9]*%.?[a-zA-Z0-9]*",
          "type": "string"
        },
        "account_key": {
          "description": "The private key associated with the account.",
          "properties": {
            "key_id": {
              "description": "The Key ID.",
              "type": "string"
            },
            "key_set": {
              "description": "The ID of the key set to associate the Key ID with.",
              "type": "string"
            }
          },
          "required": [
            "key_id"
          ],
          "type": "object"
        },
        "allow_any_domain": {
          "default": false,
          "description": "If set to `true`, the plugin allows all domains and ignores any values in the `domains` list.",
          "type": "boolean"
        },
        "api_uri": {
          "default": "https://acme-v02.api.letsencrypt.org/directory",
          "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.",
          "type": "string"
        },
        "cert_type": {
          "default": "rsa",
          "description": "The certificate type to create. The possible values are `rsa` for RSA certificate or `ecc` for EC certificate.",
          "enum": [
            "ecc",
            "rsa"
          ],
          "type": "string"
        },
        "domains": {
          "description": "An array of strings representing hosts. A valid host is a string containing one or more labels separated by periods, with at most one wildcard label ('*')",
          "items": {
            "match_all": {
              "pattern": "^[^*]*%*?[^*]*$"
            },
            "match_any": {
              "patterns": [
                "%.%*$",
                "^%*%.",
                "^[^*]*$"
              ]
            },
            "required": [

            ],
            "type": "string"
          },
          "type": "array"
        },
        "eab_hmac_key": {
          "description": "External account binding (EAB) base64-encoded URL string of the HMAC key. You usually don't need to set this unless it is explicitly required by the CA.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
          "type": "string"
        },
        "eab_kid": {
          "description": "External account binding (EAB) key id. You usually don't need to set this unless it is explicitly required by the CA.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
          "type": "string"
        },
        "enable_ipv4_common_name": {
          "default": true,
          "description": "A boolean value that controls whether to include the IPv4 address in the common name field of generated certificates.",
          "type": "boolean"
        },
        "fail_backoff_minutes": {
          "default": 5,
          "description": "Minutes to wait for each domain that fails to create a certificate. This applies to both a\nnew certificate and a renewal certificate.",
          "type": "number"
        },
        "preferred_chain": {
          "description": "A string value that specifies the preferred certificate chain to use when generating certificates.",
          "type": "string"
        },
        "renew_threshold_days": {
          "default": 14,
          "description": "Days remaining to renew the certificate before it expires.",
          "type": "number"
        },
        "rsa_key_size": {
          "default": 4096,
          "description": "RSA private key size for the certificate. The possible values are 2048, 3072, or 4096.",
          "enum": [
            2048,
            3072,
            4096
          ],
          "type": "integer"
        },
        "storage": {
          "default": "shm",
          "description": "The backend storage type to use. In DB-less mode and Konnect, `kong` storage is unavailable. In hybrid mode and Konnect, `shm` storage is unavailable. `shm` storage does not persist during Kong restarts and does not work for Kong running on different machines, so consider using one of `kong`, `redis`, `consul`, or `vault` in production.",
          "enum": [
            "consul",
            "kong",
            "redis",
            "shm",
            "vault"
          ],
          "type": "string"
        },
        "storage_config": {
          "properties": {
            "consul": {
              "properties": {
                "host": {
                  "description": "A string representing a host name, such as example.com.",
                  "type": "string"
                },
                "https": {
                  "default": false,
                  "description": "Boolean representation of https.",
                  "type": "boolean"
                },
                "kv_path": {
                  "description": "KV prefix path.",
                  "type": "string"
                },
                "port": {
                  "description": "An integer representing a port number between 0 and 65535, inclusive.",
                  "maximum": 65535,
                  "minimum": 0,
                  "type": "integer"
                },
                "timeout": {
                  "description": "Timeout in milliseconds.",
                  "type": "number"
                },
                "token": {
                  "description": "Consul ACL token.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
                  "type": "string"
                }
              },
              "required": [

              ],
              "type": "object"
            },
            "kong": {
              "additionalProperties": true,
              "properties": {
              },
              "required": [

              ],
              "type": "object"
            },
            "redis": {
              "properties": {
                "database": {
                  "default": 0,
                  "description": "Database to use for the Redis connection when using the `redis` strategy",
                  "type": "integer"
                },
                "extra_options": {
                  "description": "Custom ACME Redis options",
                  "properties": {
                    "namespace": {
                      "default": "",
                      "description": "A namespace to prepend to all keys stored in Redis.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "scan_count": {
                      "default": 10,
                      "description": "The number of keys to return in Redis SCAN calls.",
                      "type": "number"
                    }
                  },
                  "required": [

                  ],
                  "type": "object"
                },
                "host": {
                  "description": "A string representing a host name, such as example.com.",
                  "type": "string"
                },
                "password": {
                  "description": "Password to use for Redis connections. If undefined, no AUTH commands are sent to Redis.",
                  "minLength": 0,
                  "type": "string"
                },
                "port": {
                  "default": 6379,
                  "description": "An integer representing a port number between 0 and 65535, inclusive.",
                  "maximum": 65535,
                  "minimum": 0,
                  "type": "integer"
                },
                "server_name": {
                  "description": "A string representing an SNI (server name indication) value for TLS.",
                  "type": "string"
                },
                "ssl": {
                  "default": false,
                  "description": "If set to true, uses SSL to connect to Redis.",
                  "type": "boolean"
                },
                "ssl_verify": {
                  "default": false,
                  "description": "If set to true, verifies the validity of the server SSL certificate. If setting this parameter, also configure `lua_ssl_trusted_certificate` in `kong.conf` to specify the CA (or server) certificate used by your Redis server. You may also need to configure `lua_ssl_verify_depth` accordingly.",
                  "type": "boolean"
                },
                "timeout": {
                  "default": 2000,
                  "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
                  "maximum": 2147483646,
                  "minimum": 0,
                  "type": "integer"
                },
                "username": {
                  "description": "Username to use for Redis connections. If undefined, ACL authentication won't be performed. This requires Redis v6.0.0+. To be compatible with Redis v5.x.y, you can set it to `default`.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
                  "type": "string"
                }
              },
              "required": [

              ],
              "shorthand_fields": {
                "auth": {
                  "minLength": 0,
                  "type": "string"
                },
                "namespace": {
                  "minLength": 0,
                  "type": "string"
                },
                "scan_count": {
                  "type": "integer"
                },
                "ssl_server_name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "shm": {
              "properties": {
                "shm_name": {
                  "default": "kong",
                  "description": "Name of shared memory zone used for Kong API gateway storage",
                  "type": "string"
                }
              },
              "required": [

              ],
              "type": "object"
            },
            "vault": {
              "properties": {
                "auth_method": {
                  "default": "token",
                  "description": "Auth Method, default to token, can be 'token' or 'kubernetes'.",
                  "enum": [
                    "kubernetes",
                    "token"
                  ],
                  "type": "string"
                },
                "auth_path": {
                  "description": "Vault's authentication path to use.",
                  "type": "string"
                },
                "auth_role": {
                  "description": "The role to try and assign.",
                  "type": "string"
                },
                "host": {
                  "description": "A string representing a host name, such as example.com.",
                  "type": "string"
                },
                "https": {
                  "default": false,
                  "description": "Boolean representation of https.",
                  "type": "boolean"
                },
                "jwt_path": {
                  "description": "The path to the JWT.",
                  "type": "string"
                },
                "kv_path": {
                  "description": "KV prefix path.",
                  "type": "string"
                },
                "port": {
                  "description": "An integer representing a port number between 0 and 65535, inclusive.",
                  "maximum": 65535,
                  "minimum": 0,
                  "type": "integer"
                },
                "timeout": {
                  "description": "Timeout in milliseconds.",
                  "type": "number"
                },
                "tls_server_name": {
                  "description": "SNI used in request, default to host if omitted.",
                  "type": "string"
                },
                "tls_verify": {
                  "default": true,
                  "description": "Turn on TLS verification.",
                  "type": "boolean"
                },
                "token": {
                  "description": "Consul ACL token.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
                  "type": "string"
                }
              },
              "required": [

              ],
              "type": "object"
            }
          },
          "required": [

          ],
          "type": "object"
        },
        "tos_accepted": {
          "default": false,
          "description": "If you are using Let's Encrypt, you must set this to `true` to agree the terms of service.",
          "type": "boolean"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing HTTP protocols.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    }
  },
  "required": [

  ]
}