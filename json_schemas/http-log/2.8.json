{
  "properties": {
    "config": {
      "properties": {
        "content_type": {
          "default": "application/json",
          "description": "Indicates the type of data sent. The only available option is `application/json`.",
          "enum": [
            "application/json"
          ],
          "type": "string"
        },
        "custom_fields_by_lua": {
          "additionalProperties": true,
          "description": "A list of key-value pairs, where the key is the name of a log field and\nthe value is a chunk of Lua code, whose return value sets or replaces\nthe log field value.",
          "type": "object"
        },
        "flush_timeout": {
          "default": 2,
          "description": "Optional time in seconds. If `queue_size` > 1, this is the max idle time before sending a log with less than `queue_size` records.",
          "examples": [
            2
          ],
          "type": "number"
        },
        "headers": {
          "additionalProperties": true,
          "description": "\nAn optional table of headers added to the HTTP message to the upstream server.\nThe table contains arrays of values, indexed by the header name (multiple values per header).\n\nThe following headers are not allowed: `Host`, `Content-Length`, `Content-Type`.",
          "type": "object"
        },
        "http_endpoint": {
          "description": "The HTTP URL endpoint (including the protocol to use) to which the data is sent.\n\nIf the `http_endpoint` contains a username and password (for example,\n`http://bob:password@example.com/logs`), then Kong Gateway automatically includes\na basic-auth `Authorization` header in the log requests.",
          "examples": [
            "http://mockbin.org/bin/:id"
          ],
          "type": "string"
        },
        "keepalive": {
          "default": 60000,
          "description": "An optional value in milliseconds that defines how long an idle connection will live before being closed.",
          "examples": [
            1000
          ],
          "type": "number"
        },
        "method": {
          "default": "POST",
          "description": "An optional method used to send data to the HTTP server. Supported values are\n`POST` (default), `PUT`, and `PATCH`.",
          "enum": [
            "PATCH",
            "POST",
            "PUT"
          ],
          "examples": [
            "POST"
          ],
          "type": "string"
        },
        "queue_size": {
          "default": 1,
          "description": "Maximum number of log entries to be sent on each message to the upstream server.",
          "type": "integer"
        },
        "retry_count": {
          "default": 10,
          "description": "Number of times to retry when sending data to the upstream server.",
          "examples": [
            15
          ],
          "type": "integer"
        },
        "timeout": {
          "default": 10000,
          "description": "An optional timeout in milliseconds when sending data to the upstream server.",
          "examples": [
            1000
          ],
          "type": "number"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified has been authenticated. (Note that some plugins can not be restricted to consumers this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "consumer_group": {
      "additionalProperties": false,
      "description": "If set, the plugin will activate only for requests where the specified consumer group has been authenticated. (Note that some plugins can not be restricted to consumers groups this way.). Leave unset for the plugin to activate regardless of the authenticated Consumer Groups",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "tcp",
          "tls",
          "tls_passthrough",
          "udp"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [

  ]
}