{
  "properties": {
    "config": {
      "properties": {
        "message": {
          "properties": {
            "ack_timeout": {
              "default": 2000,
              "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
              "maximum": 100000,
              "minimum": 1,
              "type": "integer"
            },
            "default_content": {
              "type": "string"
            },
            "delivery_mode": {
              "default": "DIRECT",
              "enum": [
                "DIRECT",
                "PERSISTENT"
              ],
              "type": "string"
            },
            "destinations": {
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "default": "QUEUE",
                    "enum": [
                      "QUEUE",
                      "TOPIC"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "minLength": 1,
              "type": "array"
            },
            "dmq_eligible": {
              "default": false,
              "type": "boolean"
            },
            "forward_body": {
              "default": false,
              "type": "boolean"
            },
            "forward_headers": {
              "default": false,
              "type": "boolean"
            },
            "forward_method": {
              "default": false,
              "type": "boolean"
            },
            "forward_uri": {
              "default": false,
              "type": "boolean"
            },
            "functions": {
              "items": {
                "required": [

                ],
                "type": "string"
              },
              "type": "array"
            },
            "priority": {
              "default": 4,
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            },
            "sender_id": {
              "default": "kong",
              "type": "string"
            },
            "tracing": {
              "default": false,
              "type": "boolean"
            },
            "tracing_sampled": {
              "default": false,
              "type": "boolean"
            },
            "ttl": {
              "default": 0,
              "minimum": -1,
              "type": "integer"
            }
          },
          "required": [
            "destinations"
          ],
          "type": "object"
        },
        "session": {
          "properties": {
            "authentication": {
              "properties": {
                "access_token": {
                  "description": "This field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).\nThis field is [encrypted](/gateway/keyring/).",
                  "type": "string"
                },
                "access_token_header": {
                  "type": "string"
                },
                "id_token": {
                  "description": "This field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).\nThis field is [encrypted](/gateway/keyring/).",
                  "type": "string"
                },
                "id_token_header": {
                  "type": "string"
                },
                "password": {
                  "description": "This field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).\nThis field is [encrypted](/gateway/keyring/).",
                  "type": "string"
                },
                "scheme": {
                  "default": "BASIC",
                  "enum": [
                    "BASIC",
                    "NONE",
                    "OAUTH2"
                  ],
                  "type": "string"
                },
                "username": {
                  "description": "This field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
                  "type": "string"
                }
              },
              "required": [

              ],
              "type": "object"
            },
            "connect_timeout": {
              "default": 3000,
              "description": "An integer representing a timeout in milliseconds. Must be between 0 and 2^31-2.",
              "maximum": 100000,
              "minimum": 100,
              "type": "integer"
            },
            "host": {
              "description": "A string representing a URL, such as https://example.com/path/to/resource?q=search.\nThis field is [referenceable](/gateway/entities/vault/#how-do-i-reference-secrets-stored-in-a-vault).",
              "type": "string"
            },
            "properties": {
              "additionalProperties": true,
              "type": "object"
            },
            "ssl_validate_certificate": {
              "default": false,
              "type": "boolean"
            },
            "vpn_name": {
              "type": "string"
            }
          },
          "required": [
            "host"
          ],
          "type": "object"
        }
      },
      "required": [
        "message",
        "session"
      ],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https"
      ],
      "description": "A set of strings representing HTTP protocols.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https"
        ],
        "required": [

        ],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [

      ],
      "type": "object"
    }
  },
  "required": [
    "config"
  ]
}