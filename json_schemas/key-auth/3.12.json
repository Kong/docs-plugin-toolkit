{
  "properties": {
    "config": {
      "properties": {
        "anonymous": {
          "description": "An optional string (consumer UUID or username) value to use as an “anonymous” consumer if authentication fails. If empty (default null), the request will fail with an authentication failure `4xx`.",
          "type": "string"
        },
        "hide_credentials": {
          "default": false,
          "description": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If `true`, the plugin strips the credential from the request.",
          "type": "boolean"
        },
        "identity_realms": {
          "default": [
            {
              "id": null,
              "region": null,
              "scope": "cp"
            }
          ],
          "description": "A configuration of Konnect Identity Realms that indicate where to source a consumer from.",
          "items": {
            "properties": {
              "id": {
                "description": "A string representing a UUID (universally unique identifier).",
                "type": "string",
                "uuid": true
              },
              "region": {
                "type": "string"
              },
              "scope": {
                "enum": [
                  "cp",
                  "realm"
                ],
                "type": "string"
              }
            },
            "required": [],
            "type": "object"
          },
          "type": "array"
        },
        "key_in_body": {
          "default": false,
          "description": "If enabled, the plugin reads the request body. Supported MIME types: `application/www-form-urlencoded`, `application/json`, and `multipart/form-data`.",
          "type": "boolean"
        },
        "key_in_header": {
          "default": true,
          "description": "If enabled (default), the plugin reads the request header and tries to find the key in it.",
          "type": "boolean"
        },
        "key_in_query": {
          "default": true,
          "description": "If enabled (default), the plugin reads the query parameter in the request and tries to find the key in it.",
          "type": "boolean"
        },
        "key_names": {
          "default": [
            "apikey"
          ],
          "description": "Describes an array of parameter names where the plugin will look for a key. The key names may only contain [a-z], [A-Z], [0-9], [_] underscore, and [-] hyphen.",
          "items": {
            "description": "A string representing an HTTP header name.",
            "required": [],
            "type": "string"
          },
          "type": "array"
        },
        "realm": {
          "description": "When authentication fails the plugin sends `WWW-Authenticate` header with `realm` attribute value.",
          "type": "string"
        },
        "run_on_preflight": {
          "default": true,
          "description": "A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests. If set to `false`, then `OPTIONS` requests are always allowed.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "protocols": {
      "default": [
        "grpc",
        "grpcs",
        "http",
        "https",
        "ws",
        "wss"
      ],
      "description": "A list of the request protocols that will trigger this plugin. The default value, as well as the possible values allowed on this field, may change depending on the plugin type. For example, plugins that only work in stream mode will only support tcp and tls.",
      "items": {
        "enum": [
          "grpc",
          "grpcs",
          "http",
          "https",
          "ws",
          "wss"
        ],
        "required": [],
        "type": "string"
      },
      "type": "array"
    },
    "route": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via the specified route. Leave unset for the plugin to activate regardless of the route being used.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "description": "If set, the plugin will only activate when receiving requests via one of the routes belonging to the specified Service. Leave unset for the plugin to activate regardless of the Service being matched.",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    }
  },
  "required": []
}